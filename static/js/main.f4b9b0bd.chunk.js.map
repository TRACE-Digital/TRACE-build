{"version":3,"sources":["assets/img/emilyz.jpg","assets/img/header.jpg","components/Navbars/AdminNavbar.js","contexts/BackgroundColorContext.js","components/Sidebar/Sidebar.js","components/PrivacyBadge/PrivacyBadge.js","views/Dashboard.js","views/Search.js","views/Analytics.js","views/Colors.js","views/Editor.js","views/Contact.js","layouts/Admin/Admin.js","routes.js","views/UserProfile.js","assets/img/fingerprint.svg","views/Landing.js","views/Login.js","contexts/ThemeContext.js","components/ThemeWrapper/ThemeWrapper.js","components/BackgroundColorWrapper/BackgroundColorWrapper.js","index.js","variables/charts.js"],"names":["a","console","log","Auth","currentAuthenticatedUser","currentUser","userPool","getCurrentUser","signOut","localStorage","removeItem","window","location","href","AdminNavbar","props","React","useState","collapseOpen","setcollapseOpen","modalSearch","setmodalSearch","color","setcolor","getItem","isLoggedIn","setIsLoggedIn","replicate","setReplicate","useEffect","setupReplication","obj","TODO_replication","on","e","alert","error","teardownReplication","handleReplication","addEventListener","updateColor","removeEventListener","innerWidth","toggleModalSearch","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","NavbarToggler","onClick","toggleSidebar","NavbarBrand","preventDefault","brandText","Collapse","navbar","isOpen","Nav","UncontrolledDropdown","nav","style","textAlign","inactiveLabel","activeLabel","value","onToggle","prev","DropdownToggle","caret","DropdownMenu","right","tag","NavLink","DropdownItem","divider","clearDb","reload","to","Link","Modal","modalClassName","toggle","ModalHeader","Input","placeholder","type","aria-label","backgroundColors","BackgroundColorContext","createContext","changeColor","ps","Sidebar","useLocation","sidebarRef","useRef","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","target","src","imgSrc","alt","text","innerLink","Consumer","data","ref","map","prop","key","redirect","routeName","path","pathname","pro","layout","activeClassName","icon","rtlName","name","defaultProps","PrivacyBadge","id","setID","url","service","axios","get","then","service_url","badge","Dashboard","setPlsRender","ThirdPartyAccount","loadAll","accounts","loadAccounts","Row","Object","values","filter","account","AccountType","CLAIMED","Col","lg","Card","CardBody","site","logoClass","userName","prettyUrl","urlMain","testSiteNames","SearchComponent","isVisible","setVisible","keywordsEntered","setKeywordsEntered","tagsEntered","setTagsEntered","userNames","setUserNames","resultIds","setResultsIds","progress","setProgress","tags","slice","categories","setCategories","length","testSites","allSites","taggedSites","filterSitesByTags","taggedSiteNames","searchDef","SearchDefinition","save","new","search","events","concat","start","handleClickCheckbox","includes","splice","push","claimAccount","claim","deleteAccount","reject","discoveredHTML","unregisteredHTML","resultId","searchResults","isUnregistered","UNREGISTERED","htmlForDisplay","class","replace","position","bottom","Button","item","deleteEntry","onKeyDown","keyCode","document","getElementById","onChange","checked","width","backgroundColor","borderRadius","bigChartData","setbigChartData","setBgChartData","xs","CardHeader","sm","CardTitle","ButtonGroup","data-toggle","active","size","chartExample1","options","chartExample2","chartExample3","chartExample4","md","aria-labelledby","Table","FormGroup","check","Label","defaultValue","title","UncontrolledTooltip","delay","placement","defaultChecked","responsive","Colors","handleClick","tempData","Contact","component","Search","Analytics","Form","disabled","htmlFor","cols","rows","CardFooter","CardText","require","default","setIsOpen","iconClass","Admin","mainPanelRef","documentElement","setsidebarOpened","classList","remove","tables","querySelectorAll","i","add","scrollTop","scrollingElement","getBrandText","Fragment","Landing","block","signUp","username","email","password","attributes","user","setItem","message","signIn","Login","setEmail","setPassword","isLogin","setisLogin","setError","CardImg","top","Alert","onSubmit","localError","form","themes","ThemeContext","theme","changeTheme","ThemeContextWrapper","setTheme","body","Provider","children","BackgroundColorWrapper","setColor","Amplify","configure","region","userPoolId","userPoolWebClientId","mandatorySignIn","cookieStorage","domain","host","expires","secure","authenticationFlowType","ReactDOM","render","exact","from","chart1_2_options","maintainAspectRatio","legend","display","tooltips","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","scales","yAxes","barPercentage","gridLines","drawBorder","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","data1","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data2","data3","module","exports","hoverBackgroundColor"],"mappings":";gGAAA,OAAe,cAA0B,oC,mGCAzC,OAAe,cAA0B,oC,mXC6CzC,4BAAAA,EAAA,6DACEC,QAAQC,IAAI,UADd,KAEED,QAFF,SAEoBE,IAAKC,2BAFzB,+BAEUF,IAFV,yBAIUG,EAAcF,IAAKG,SAASC,iBAJtC,UAKUF,EAAYG,UALtB,eAMIP,QAAQC,IAAI,SANhB,KAOID,QAPJ,UAOsBE,IAAKC,2BAP3B,yBAOYF,IAPZ,gBAQIO,aAAaC,WAAW,QACxBC,OAAOC,SAASC,KAAO,WAT3B,kDAWMZ,QAAQC,IAAI,sBAAZ,MACAO,aAAaC,WAAW,QACxBC,OAAOC,SAASC,KAAO,WAb7B,2D,sBAkMeC,MAjLf,SAAqBC,GAAQ,MAAD,EACcC,IAAMC,UAAS,GAD7B,mBACnBC,EADmB,KACLC,EADK,OAEYH,IAAMC,UAAS,GAF3B,mBAEnBG,EAFmB,KAENC,EAFM,OAGAL,IAAMC,SAAS,sBAHf,mBAGnBK,EAHmB,KAGZC,EAHY,OAIUP,IAAMC,SAAUR,aAAae,QAAQ,SAJ/C,mBAInBC,EAJmB,KAIPC,EAJO,OAKQV,IAAMC,UAAS,GALvB,mBAKnBU,EALmB,KAKRC,EALQ,KAQ1BZ,IAAMa,WAAU,KAAM,4CACpB,4BAAA7B,EAAA,0DACM2B,EADN,0CAGwBG,6BAHxB,OAGYC,EAHZ,OAIyBA,EAAIC,iBAEZC,GAAG,SAAUC,IACtBC,MAAM,yBAAD,OAA0BD,IAC/BjC,QAAQmC,MAAMF,GACdN,GAAa,MATrB,uDAYMO,MAAM,yBAAD,cACLlC,QAAQmC,MAAR,MACAR,GAAa,GAdnB,8EAmBYS,gCAnBZ,kEAqBMpC,QAAQmC,MAAR,MArBN,qFADoB,uBAAC,WAAD,wBA2BpBE,KACC,CAACX,IAEJX,IAAMa,WAAU,KACdlB,OAAO4B,iBAAiB,SAAUC,GAE3B,WACL7B,OAAO8B,oBAAoB,SAAUD,OAIzC,MAAMA,EAAc,KACd7B,OAAO+B,WAAa,KAAOxB,EAC7BK,EAAS,YAETA,EAAS,uBAaPoB,EAAoB,KACxBtB,GAAgBD,IAElB,OACE,qCACE,cAACwB,EAAA,EAAD,CAAQC,UAAWC,IAAW,kBAAmBxB,GAAQyB,OAAO,KAAhE,SACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,sBAAKJ,UAAU,iBAAf,UACE,qBACEA,UAAWC,IAAW,yBAA0B,CAC9CI,QAASnC,EAAMoC,gBAFnB,SAKE,eAACC,EAAA,EAAD,CAAeC,QAAStC,EAAMuC,cAA9B,UACE,sBAAMT,UAAU,4BAChB,sBAAMA,UAAU,4BAChB,sBAAMA,UAAU,iCAGpB,cAACU,EAAA,EAAD,CAAa1C,KAAK,SAASwC,QAAUnB,GAAMA,EAAEsB,iBAA7C,SACGzC,EAAM0C,eAGX,eAACL,EAAA,EAAD,CAAeC,QAhCA,KAEnB9B,EADEL,EACO,qBAEA,YAEXC,GAAiBD,IA0BX,UACE,sBAAM2B,UAAU,oCAChB,sBAAMA,UAAU,oCAChB,sBAAMA,UAAU,uCAElB,cAACa,EAAA,EAAD,CAAUC,QAAM,EAACC,OAAQ1C,EAAzB,SACE,eAAC2C,EAAA,EAAD,CAAKhB,UAAU,UAAUc,QAAM,EAA/B,UACE,cAACG,EAAA,EAAD,CAAsBC,KAAG,EAAzB,SACE,sBAAKC,MAAO,CAAEC,UAAW,UAAzB,iBAEA,cAAC,IAAD,CACIC,cAAe,uCACfC,YAAa,sCACbC,MAAOzC,IAAa,EACpB0C,SAAU,IAAMzC,GAAa0C,IAASA,WAI5C,eAACR,EAAA,EAAD,CAAsBC,KAAG,EAAzB,UACE,eAACQ,EAAA,EAAD,CACEC,OAAK,EACLlD,MAAM,UACNyC,KAAG,EACHV,QAAO,uCAAE,WAAOnB,GAAP,SAAAlC,EAAA,sDAAekC,EAAEsB,iBAAjB,2CAAF,sDAJT,UAME,qBAAKX,UAAU,QAAf,SACE,mBAAGA,UAAU,+BAEf,mBAAGA,UAAU,uCACb,mBAAGA,UAAU,iBAEf,eAAC4B,EAAA,EAAD,CAAc5B,UAAU,kBAAkB6B,OAAK,EAACC,IAAI,KAApD,UACE,cAACC,EAAA,EAAD,CAASD,IAAI,KAAb,SACE,cAACE,EAAA,EAAD,CAAchC,UAAU,WAAxB,uBAEF,cAAC+B,EAAA,EAAD,CAASD,IAAI,KAAb,SACE,cAACE,EAAA,EAAD,CAAchC,UAAU,WAAxB,wBAEF,cAACgC,EAAA,EAAD,CAAcF,IAAI,KAAK9B,UAAU,KAGjC,cAACgC,EAAA,EAAD,CAAcC,SAAO,EAACH,IAAI,OAC1B,cAACC,EAAA,EAAD,CAASD,IAAI,KAAb,SACE,cAACE,EAAA,EAAD,CAAchC,UAAU,WAAWQ,QAAO,sBAAE,sBAAArD,EAAA,+EAElC+E,oBAFkC,OAGxCpE,OAAOC,SAASoE,SAHwB,+CAKxC/E,QAAQmC,MAAR,MALwC,wDAA5C,8BASF,cAACyC,EAAA,EAAD,CAAcC,SAAO,EAACH,IAAI,QACxBlD,GACF,cAACmD,EAAA,EAAD,CAASK,GAAG,SAASN,IAAKO,IAA1B,SACE,cAACL,EAAA,EAAD,CAAchC,UAAU,WAAxB,sBAEDpB,GACD,eAACmD,EAAA,EAAD,CAASvB,QAAS,M,mCAChB7C,GACAkB,GAAeD,IACZkD,IAAI,KAHT,cAIE,cAACE,EAAA,EAAD,CAAchC,UAAU,WAAxB,8BAIN,oBAAIA,UAAU,kCAKtB,cAACsC,EAAA,EAAD,CACEC,eAAe,eACfxB,OAAQxC,EACRiE,OAAQ1C,EAHV,SAKE,eAAC2C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,YAAY,SAASC,KAAK,SACjC,wBACEC,aAAW,QACX7C,UAAU,QACVQ,QAASV,EAHX,SAKE,mBAAGE,UAAU,4CCrOlB,MAAM8C,EAEL,OAIKC,EAAyBC,wBAAc,CAClDvE,MAAOqE,EACPG,YAAcxE,QCuBhB,IAAIyE,EAEJ,SAASC,EAAQjF,GACf,MAAMH,EAAWqF,cACXC,EAAalF,IAAMmF,OAAO,MAKhCnF,IAAMa,WAAU,KACVuE,UAAUC,SAASC,QAAQ,QAAU,IACvCP,EAAK,IAAIQ,IAAiBL,EAAWM,QAAS,CAC5CC,iBAAiB,EACjBC,iBAAiB,KAId,WACDN,UAAUC,SAASC,QAAQ,QAAU,GACvCP,EAAGY,cAIT,MAGQC,EAA4B7F,EAA5B6F,OAAQC,EAAoB9F,EAApB8F,UAAWC,EAAS/F,EAAT+F,KAC3B,IAAIC,EAAU,KACVC,EAAW,KAgDf,YA/CaC,IAATH,SACsBG,IAApBH,EAAKI,YACPH,EACE,mBACElG,KAAMiG,EAAKI,WACXrE,UAAU,wBACVsE,OAAO,QACP9D,QAAStC,EAAMuC,cAJjB,SAME,qBAAKT,UAAU,WAAf,SACE,qBAAKuE,IAAKN,EAAKO,OAAQC,IAAI,mBAIjCN,EACE,mBACEnG,KAAMiG,EAAKI,WACXrE,UAAU,0BACVsE,OAAO,QACP9D,QAAStC,EAAMuC,cAJjB,SAMGwD,EAAKS,SAIVR,EACE,cAAC,IAAD,CACE9B,GAAI6B,EAAKU,UACT3E,UAAU,wBACVQ,QAAStC,EAAMuC,cAHjB,SAKE,qBAAKT,UAAU,WAAf,SACE,qBAAKuE,IAAKN,EAAKO,OAAQC,IAAI,mBAIjCN,EACE,cAAC,IAAD,CACE/B,GAAI6B,EAAKU,UACT3E,UAAU,0BACVQ,QAAStC,EAAMuC,cAHjB,SAKGwD,EAAKS,SAMZ,cAAC3B,EAAuB6B,SAAxB,UACG,EAAGnG,WACF,qBAAKuB,UAAU,UAAU6E,KAAMpG,EAA/B,SACE,sBAAKuB,UAAU,kBAAkB8E,IAAKzB,EAAtC,UACe,OAAZa,GAAiC,OAAbC,EACnB,sBAAKnE,UAAU,OAAf,UACGkE,EACAC,KAED,KACJ,cAACnD,EAAA,EAAD,UACG+C,EAAOgB,KAAI,CAACC,EAAMC,KACjB,OAAID,EAAKE,SAAiB,KAExB,oBACElF,WAtFGmF,EAuFWH,EAAKI,MAtF5BrH,EAASsH,WAAaF,EAAY,SAAW,KAsFRH,EAAKM,IAAM,cAAgB,KAFzD,SAME,eAAC,IAAD,CACElD,GAAI4C,EAAKO,OAASP,EAAKI,KACvBpF,UAAU,WACVwF,gBAAgB,SAChBhF,QAAStC,EAAMuC,cAJjB,UAME,mBAAGT,UAAWgF,EAAKS,OACnB,4BAAIzB,EAAYgB,EAAKU,QAAUV,EAAKW,WATjCV,GAzFFE,kBA+GvBhC,EAAQyC,aAAe,CACrB5B,WAAW,EACXD,OAAQ,CAAC,KAsBIZ,Q,qDClJA0C,MAtBf,SAAsB3H,GAAQ,MAAD,EACPE,mBAAS,IADF,mBACpB0H,EADoB,KAChBC,EADgB,KAI3B,IAAIC,EAAM,oCAAsC9H,EAAM+H,QACtDC,IAAMC,IAAIH,GACPI,MAAKvB,GAAQkB,EAAMlB,EAAKA,KAAKiB,MAMhC,IAAIO,EAAc,gCAAkCP,EAChDQ,EAAQ,kCAAoCR,EAAK,OAErD,OACI,mBAAG9H,KAAMqI,EAAa/B,OAAO,QAA7B,SACE,qBAAKC,IAAK+B,EAAO7B,IAAI,qBCilBd8B,MAlkBf,SAAmBrI,GAAQ,MAAD,EACUC,IAAMC,UAAS,GADzB,mBACNoI,GADM,aAEgBrI,IAAMC,SAAS,SAF/B,mBAuBxB,OAvBwB,UAOxBY,qBAAU,KAAM,4CACd,sBAAA7B,EAAA,+EAGUsJ,oBAAkBC,UAH5B,OAIIF,GAAa7C,IAAYA,IAJ7B,gDAMIvG,QAAQmC,MAAM,8CACdnC,QAAQmC,MAAR,MAPJ,QASEnC,QAAQC,IAAIsJ,YATd,0DADc,uBAAC,WAAD,wBAadC,KACC,IAGD,mCACE,sBAAK5G,UAAU,UAAf,UAEE,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,eAAd,8BAKA,cAAC,IAAD,CACEA,UAAU,kCACVvB,MAAM,UACN2D,GAAG,gBAHL,6BASF,uBAEA,cAACyE,EAAA,EAAD,UACGC,OAAOC,OAAOJ,YACZK,QAAOC,GAAWA,EAAQrE,OAASsE,cAAYC,UAC/CpC,KAAIkC,GACL,cAACG,EAAA,EAAD,CAAKC,GAAG,IAAR,SAEE,cAACC,EAAA,EAAD,CAAMtH,UAAU,YAAhB,SACE,cAACuH,EAAA,EAAD,UACE,gCACA,sBAAKvH,UAAU,mBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAciG,QAASgB,EAAQO,KAAK7B,SAExC,eAAC1E,EAAA,EAAD,WACA,cAACS,EAAA,EAAD,CACEC,OAAK,EACL3B,UAAU,eACVvB,MAAM,OACNmE,KAAK,SAJP,SAMA,mBAAG5C,UAAU,wBAEb,eAAC4B,EAAA,EAAD,CAAc5B,UAAU,sBAAxB,UACE,cAACgC,EAAA,EAAD,CACExB,QAAUnB,GAAMA,EAAEsB,iBADpB,oBAKA,cAACqB,EAAA,EAAD,CACExB,QAAUnB,GAAMA,EAAEsB,iBADpB,2BAQA,sBAAKX,UAAY,SAAjB,cAA2B,mBAAGA,UAAsC,uBAA3BiH,EAAQO,KAAKC,UAAqC,OAAOR,EAAQO,KAAKC,UAAY,OAAOR,EAAQO,KAAKC,eAC/I,sBAAKzH,UAAY,qBAAjB,cAAwCiH,EAAQS,YAChD,qBAAK1H,UAAY,cAAjB,SACE,mBAAGhC,KAAMiJ,EAAQjB,IAAK1B,OAAO,QAA7B,SAAsC2C,EAAQO,KAAKG,WAAaV,EAAQO,KAAKI,SAAWX,EAAQO,KAAKxB,gBAnC9FiB,EAAQnB,c,kBC/ErC,MAAM+B,EAAgB,CACpB,SACA,SACA,oBACA,WACA,YACA,SACA,MACA,YACA,cACA,aACA,QACA,UACA,UACA,UAyPaC,OAtPf,WAA4B,MAAD,EACO1J,oBAAS,GADhB,mBAClB2J,EADkB,KACPC,EADO,OAEqB5J,oBAAS,GAF9B,mBAElB6J,EAFkB,KAEDC,EAFC,OAGa9J,oBAAS,GAHtB,mBAGlB+J,EAHkB,KAGLC,EAHK,OAIShK,mBAAS,IAJlB,mBAIlBiK,EAJkB,KAIPC,EAJO,OAKUlK,mBAAS,IALnB,mBAKlBmK,EALkB,KAKPC,EALO,OAMOpK,oBAAU,GANjB,mBAMlBqK,EANkB,KAMRC,EANQ,OAOWtK,mBAASuK,OAAKC,SAPzB,mBAOlBC,EAPkB,KAONC,EAPM,iDA2CzB,WAA4BzJ,GAA5B,uBAAAlC,EAAA,yDAC2B,IAArBkL,EAAUU,OADhB,gBAEIb,GAAmB,GACnB9K,QAAQC,IAAI,uBAHhB,0BAKiC,IAAtBwL,EAAWE,OALtB,iBAMIX,GAAe,GACfhL,QAAQC,IAAI,mBAPhB,+BASID,QAAQC,IAAI,mBAGZmL,EAAc,IACdE,EAAY,GAINM,EAAYnB,EAAc9C,KAAIY,GAAQsD,WAAStD,KAC/CuD,EAAcC,4BAAkBH,EAAWH,GAC3CO,EAAkBF,EAAYnE,KAAIyC,GAAQA,EAAK7B,QAE/C0D,EAAY,IAAIC,wBAAiBlF,EAAWgF,IACxCf,UAAYA,EAtB1B,UAuBUgB,EAAUE,OAvBpB,yBAyByBF,EAAUG,MAzBnC,eAyBUC,EAzBV,QA2BWC,OAAOtK,GAAG,UAAW0G,IAC1B0C,GAAc/G,GAAQA,EAAKkI,OAAO,CAAC7D,MACnC4C,EAAYe,EAAOhB,aA7BzB,UAgCUgB,EAAOG,QAhCjB,6CA3CyB,sBAwFzB,SAASC,EAAoBxK,GAEvBwJ,EAAWiB,SAASzK,EAAEiF,OAAO/C,QAC/BsH,EAAWkB,OAAOlB,EAAWpF,QAAQpE,EAAEiF,OAAO/C,OAAQ,GACtDuH,EAAc,IAAID,MAGlBT,GAAe,GACfS,EAAWmB,KAAK3K,EAAEiF,OAAO/C,OACzBuH,EAAc,IAAID,KAjGG,SAqGVoB,EArGU,8EAqGzB,WAA4BhD,GAA5B,SAAA9J,EAAA,+EAEY8J,EAAQiD,QAFpB,OAGM5K,MAAM,iCAHZ,gDAKIA,MAAM,qCACNlC,QAAQmC,MAAR,MANJ,0DArGyB,+BA+GV4K,EA/GU,8EA+GzB,WAA6BlD,GAA7B,SAAA9J,EAAA,+EAEY8J,EAAQmD,SAFpB,OAGM9K,MAAM,iCAHZ,+CAKIlC,QAAQmC,MAAR,MALJ,yDA/GyB,sBAyHzB,MAAM8K,EAAiB,GACjBC,EAAmB,GA1HA,oBA2HF/B,GA3HE,IA2HzB,2BAAkC,CAAC,MAAxBgC,EAAuB,QAC1BtD,EAAUuD,gBAAcD,GACxBE,EAAiBxD,EAAQrE,OAASsE,cAAYwD,aAE9CC,EACJ,cAACvD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAACC,EAAA,EAAD,CAAMtH,UAAU,YAAhB,SACE,cAACuH,EAAA,EAAD,UACE,sBAAKqD,MAAM,eAAX,UACE,sBAAK5K,UAAU,SAAf,cAAyB,mBAAGA,UAAsC,uBAA3BiH,EAAQO,KAAKC,UAAqC,OAAOR,EAAQO,KAAKC,UAAY,OAAOR,EAAQO,KAAKC,eAC7I,sBAAKzH,UAAU,qBAAf,cACMiH,EAAQS,YAEd,qBAAK1H,UAAU,cAAf,SACE,mBAAGhC,KAAMiJ,EAAQO,KAAKxB,IAAI6E,QAAQ,KAAM5D,EAAQS,UAAWpD,OAAO,QAAlE,SACG2C,EAAQO,KAAKG,WAAaV,EAAQO,KAAKI,SAAWX,EAAQO,KAAKxB,QAGnEyE,EAAiB,wBAChB,sBAAKzK,UAAU,OAAOmB,MAAO,CAAE2J,SAAU,WAAYC,OAAQ,OAAQlJ,MAAO,QAA5E,UAEE,cAACmJ,EAAA,EAAD,CAAQxK,QAAS,IAAMyJ,EAAahD,GAAUjH,UAAU,eAAxD,SACE,mBAAGA,UAAU,6BAHjB,OAME,cAACgL,EAAA,EAAD,CAAQxK,QAAS,IAAM2J,EAAclD,GAAUjH,UAAU,eAAzD,SACE,mBAAGA,UAAU,8CArBViH,EAAQnB,IA+BvB2E,EACFH,EAAiBN,KAAKW,GAEtBN,EAAeL,KAAKW,IAlKC,8BAsKzB,OACE,sBAAK3K,UAAU,UAAf,UACE,qBAAKA,UAAU,eAAf,mBAGA,qBAAKA,UAAU,cAAf,qNAEA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBqI,EAAUtD,KAAIkG,GAAQ,sBAAKjL,UAAU,UAAf,UAC5C,mBAAGA,UAAU,oBAAoBQ,QAAS,KAAM0K,OAhGnC7L,EAgG+C4L,EA/FlE5C,EAAU0B,OAAO1B,EAAU5E,QAAQpE,GAAI,QACvCiJ,EAAa,IAAID,IAFnB,IAAqBhJ,KAiGZ4L,IAFyEA,OAK5E,qBAAKjL,UAAU,MAAf,SACE,uBACE8F,GAAG,aACH9F,UAAU,aACV2C,YAAY,gBACZwI,UA5JV,SAAkB9L,GACE,KAAdA,EAAE+L,SACC/C,EAAUyB,SAASzK,EAAEiF,OAAO/C,QAA6B,KAAnBlC,EAAEiF,OAAO/C,QAClD8G,EAAU2B,KAAK3K,EAAEiF,OAAO/C,OACxB+G,EAAa,IAAID,IACjBH,GAAmB,IAErBmD,SAASC,eAAe,cAAc/J,MAAQ,IAEzB,IAAdlC,EAAE+L,SAAoC,KAAnB/L,EAAEiF,OAAO/C,QACnC8G,EAAU0B,OAAO1B,EAAUU,OAAS,EAAG,GACvCT,EAAa,IAAID,MAkJXkD,SArGV,WACErD,GAAmB,QAuGf,qBAAKlI,UAAU,OAAf,SACE,mBAAGQ,QA7Lc,4CA6LSR,UAAU,uBAIxC,qBAAKA,UAAU,gBAAf,SAA+B,sBAAMA,UAAU,kBAAkBQ,QAxL3C,KACxBwH,GAAYD,IAuLqB,6BAC/B,qBAAK/H,UAAU,gBAAf,SAA+B,sBAAMA,UAAU,kBAAkBQ,QArL3C,KAExB1C,OAAOC,SAASoE,UAmLiB,sBAE/B,sBAAKnC,UAAW+H,EAAY,cAAgB,iBAA5C,UACE,cAAClB,EAAA,EAAD,UACG8B,OAAK5D,KAAIjD,GACR,eAACsF,EAAA,EAAD,CAAKC,GAAG,IAAR,UACE,uBACEzE,KAAK,WACLrB,MAAOO,EACPyJ,SAAU1B,EACV2B,QAAS3C,EAAWiB,SAAShI,KAE/B,sBAAM9B,UAAU,gBAAhB,SAAiC8B,MAPlBA,OAWrB,cAACkJ,EAAA,EAAD,CAAQhL,UAAU,oBAAoBQ,QAhM1B,KAChBsI,EAAcH,OAAKC,SACnBR,GAAe,IA8LX,wBACA,cAAC4C,EAAA,EAAD,CAAQhL,UAAU,oBAAoBQ,QA5LxB,KAClBsI,EAAc,KA2LV,6BAEF,qBAAK9I,UAAWiI,GAA6CE,EAA3B,wBAAmE,oBAArG,SACGF,EAAkB,oCAAuCE,EAAc,gCAAkC,KAG3GM,GAAY,EACX,sBAAKtH,MAAO,CAAEsK,MAAO,OAAQrK,UAAW,UAAxC,UACE,gCAAMqH,EAAN,OACA,qBAAKtH,MAAO,CAAEsK,MAAM,GAAD,OAAKhD,EAAL,KAAkBiD,gBAAiB,UAAWC,aAAc,IAA/E,qBAGF,wBAGF,uBAEA,gCACGpD,EAAUQ,OAAS,EAAI,8BAAK,uDAAqC,wBAClE,cAAClC,EAAA,EAAD,UACGwD,OAIL,gCACG9B,EAAUQ,OAAS,EAAI,8BAAK,yDAAuC,wBACpE,cAAClC,EAAA,EAAD,UACGyD,W,wFC4QI/D,OA9df,SAAmBrI,GAAQ,MAAD,EACgBC,IAAMC,SAAS,SAD/B,mBACjBwN,EADiB,KACHC,EADG,KAElBC,EAAkBnG,IACtBkG,EAAgBlG,IAElB,OACE,mCACE,sBAAK3F,UAAU,UAAf,UACE,cAAC6G,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,CAAK2E,GAAG,KAAR,SACE,eAACzE,EAAA,EAAD,CAAMtH,UAAU,aAAhB,UACE,cAACgM,GAAA,EAAD,UACE,eAACnF,EAAA,EAAD,WACE,eAACO,EAAA,EAAD,CAAKpH,UAAU,YAAYiM,GAAG,IAA9B,UACE,oBAAIjM,UAAU,gBAAd,6BACA,cAACkM,GAAA,EAAD,CAAWpK,IAAI,KAAf,8CAEF,cAACsF,EAAA,EAAD,CAAK6E,GAAG,IAAR,SACE,eAACE,GAAA,EAAD,CACEnM,UAAU,+BACVoM,cAAY,UAFd,UAIE,eAACpB,EAAA,EAAD,CACElJ,IAAI,QACJ9B,UAAWC,IAAW,aAAc,CAClCoM,OAAyB,UAAjBT,IAEVnN,MAAM,OACNqH,GAAG,IACHwG,KAAK,KACL9L,QAAS,IAAMsL,EAAe,SARhC,UAUE,sBAAM9L,UAAU,qDAAhB,sBAGA,sBAAMA,UAAU,oBAAhB,SACE,mBAAGA,UAAU,kCAGjB,eAACgL,EAAA,EAAD,CACEvM,MAAM,OACNqH,GAAG,IACHwG,KAAK,KACLxK,IAAI,QACJ9B,UAAWC,IAAW,aAAc,CAClCoM,OAAyB,UAAjBT,IAEVpL,QAAS,IAAMsL,EAAe,SARhC,UAUE,sBAAM9L,UAAU,qDAAhB,uBAGA,sBAAMA,UAAU,oBAAhB,SACE,mBAAGA,UAAU,+BAGjB,eAACgL,EAAA,EAAD,CACEvM,MAAM,OACNqH,GAAG,IACHwG,KAAK,KACLxK,IAAI,QACJ9B,UAAWC,IAAW,aAAc,CAClCoM,OAAyB,UAAjBT,IAEVpL,QAAS,IAAMsL,EAAe,SARhC,UAUE,sBAAM9L,UAAU,qDAAhB,sBAGA,sBAAMA,UAAU,oBAAhB,SACE,mBAAGA,UAAU,yCAOzB,cAACuH,EAAA,EAAD,UACE,qBAAKvH,UAAU,aAAf,SACE,cAAC,QAAD,CACE6E,KAAM0H,iBAAcX,GACpBY,QAASD,iBAAcC,qBAOnC,eAAC3F,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,eAACC,EAAA,EAAD,CAAMtH,UAAU,aAAhB,UACE,eAACgM,GAAA,EAAD,WACE,oBAAIhM,UAAU,gBAAd,6BACA,eAACkM,GAAA,EAAD,CAAWpK,IAAI,KAAf,UACE,mBAAG9B,UAAU,qCADf,iBAIF,cAACuH,EAAA,EAAD,UACE,qBAAKvH,UAAU,aAAf,SACE,cAAC,QAAD,CACE6E,KAAM4H,iBAAc5H,KACpB2H,QAASC,iBAAcD,mBAMjC,cAACpF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,eAACC,EAAA,EAAD,CAAMtH,UAAU,aAAhB,UACE,eAACgM,GAAA,EAAD,WACE,oBAAIhM,UAAU,gBAAd,yBACA,eAACkM,GAAA,EAAD,CAAWpK,IAAI,KAAf,UACE,mBAAG9B,UAAU,8CAA+C,IAD9D,oBAKF,cAACuH,EAAA,EAAD,UACE,qBAAKvH,UAAU,aAAf,SACE,cAAC,OAAD,CACE6E,KAAM6H,iBAAc7H,KACpB2H,QAASE,iBAAcF,mBAMjC,cAACpF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,eAACC,EAAA,EAAD,CAAMtH,UAAU,aAAhB,UACE,eAACgM,GAAA,EAAD,WACE,oBAAIhM,UAAU,gBAAd,6BACA,eAACkM,GAAA,EAAD,CAAWpK,IAAI,KAAf,UACE,mBAAG9B,UAAU,qCADf,iBAIF,cAACuH,EAAA,EAAD,UACE,qBAAKvH,UAAU,aAAf,SACE,cAAC,QAAD,CACE6E,KAAM8H,iBAAc9H,KACpB2H,QAASG,iBAAcH,sBAOnC,eAAC3F,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,CAAKC,GAAG,IAAIuF,GAAG,KAAf,SACE,eAACtF,EAAA,EAAD,CAAMtH,UAAU,aAAhB,UACE,eAACgM,GAAA,EAAD,WACE,oBAAIhM,UAAU,iBAAd,sBACA,mBAAGA,UAAU,yBAAb,oBACA,eAACiB,EAAA,EAAD,WACE,cAACS,EAAA,EAAD,CACEC,OAAK,EACL3B,UAAU,WACVvB,MAAM,OACN2N,cAAY,WACZxJ,KAAK,SALP,SAOE,mBAAG5C,UAAU,sCAEf,eAAC4B,EAAA,EAAD,CAAciL,kBAAgB,mBAAmBhL,OAAK,EAAtD,UACE,cAACG,EAAA,EAAD,CACEhE,KAAK,SACLwC,QAAUnB,GAAMA,EAAEsB,iBAFpB,oBAMA,cAACqB,EAAA,EAAD,CACEhE,KAAK,SACLwC,QAAUnB,GAAMA,EAAEsB,iBAFpB,4BAMA,cAACqB,EAAA,EAAD,CACEhE,KAAK,SACLwC,QAAUnB,GAAMA,EAAEsB,iBAFpB,qCASN,cAAC4G,EAAA,EAAD,UACE,qBAAKvH,UAAU,oCAAf,SACE,cAAC8M,GAAA,EAAD,UACE,kCACE,+BACE,6BACE,cAACC,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,GAAA,EAAD,CAAOD,OAAK,EAAZ,UACE,cAACtK,EAAA,EAAD,CAAOwK,aAAa,GAAGtK,KAAK,aAC5B,sBAAM5C,UAAU,kBAAhB,SACE,sBAAMA,UAAU,mBAKxB,+BACE,mBAAGA,UAAU,QAAb,sCACA,mBAAGA,UAAU,aAAb,+CAIF,qBAAIA,UAAU,wBAAd,UACE,cAACgL,EAAA,EAAD,CACEvM,MAAM,OACNqH,GAAG,mBACHqH,MAAM,GACNvK,KAAK,SAJP,SAME,mBAAG5C,UAAU,4BAEf,cAACoN,GAAA,EAAD,CACEC,MAAO,EACP/I,OAAO,mBACPgJ,UAAU,QAHZ,gDASJ,+BACE,6BACE,cAACP,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,GAAA,EAAD,CAAOD,OAAK,EAAZ,UACE,cAACtK,EAAA,EAAD,CACE6K,gBAAc,EACdL,aAAa,GACbtK,KAAK,aAEP,sBAAM5C,UAAU,kBAAhB,SACE,sBAAMA,UAAU,mBAKxB,+BACE,mBAAGA,UAAU,QAAb,6BACA,mBAAGA,UAAU,aAAb,oDAIF,qBAAIA,UAAU,wBAAd,UACE,cAACgL,EAAA,EAAD,CACEvM,MAAM,OACNqH,GAAG,mBACHqH,MAAM,GACNvK,KAAK,SAJP,SAME,mBAAG5C,UAAU,4BAEf,cAACoN,GAAA,EAAD,CACEC,MAAO,EACP/I,OAAO,mBACPgJ,UAAU,QAHZ,+BASJ,+BACE,6BACE,cAACP,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,GAAA,EAAD,CAAOD,OAAK,EAAZ,UACE,cAACtK,EAAA,EAAD,CAAOwK,aAAa,GAAGtK,KAAK,aAC5B,sBAAM5C,UAAU,kBAAhB,SACE,sBAAMA,UAAU,mBAKxB,+BACE,mBAAGA,UAAU,QAAb,8BACA,mBAAGA,UAAU,aAAb,2FAIF,qBAAIA,UAAU,wBAAd,UACE,cAACgL,EAAA,EAAD,CACEvM,MAAM,OACNqH,GAAG,mBACHqH,MAAM,GACNvK,KAAK,SAJP,SAME,mBAAG5C,UAAU,4BAEf,cAACoN,GAAA,EAAD,CACEC,MAAO,EACP/I,OAAO,mBACPgJ,UAAU,QAHZ,6BASJ,+BACE,6BACE,cAACP,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,GAAA,EAAD,CAAOD,OAAK,EAAZ,UACE,cAACtK,EAAA,EAAD,CAAOwK,aAAa,GAAGtK,KAAK,aAC5B,sBAAM5C,UAAU,kBAAhB,SACE,sBAAMA,UAAU,mBAKxB,+BACE,mBAAGA,UAAU,QAAb,4BACA,mBAAGA,UAAU,aAAb,2DAIF,qBAAIA,UAAU,wBAAd,UACE,cAACgL,EAAA,EAAD,CACEvM,MAAM,OACNqH,GAAG,mBACHqH,MAAM,GACNvK,KAAK,SAJP,SAME,mBAAG5C,UAAU,4BAEf,cAACoN,GAAA,EAAD,CACEC,MAAO,EACP/I,OAAO,mBACPgJ,UAAU,QAHZ,6BASJ,+BACE,6BACE,cAACP,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,GAAA,EAAD,CAAOD,OAAK,EAAZ,UACE,cAACtK,EAAA,EAAD,CAAOwK,aAAa,GAAGtK,KAAK,aAC5B,sBAAM5C,UAAU,kBAAhB,SACE,sBAAMA,UAAU,mBAKxB,+BACE,mBAAGA,UAAU,QAAb,wCACA,mBAAGA,UAAU,aAAb,0IAMF,qBAAIA,UAAU,wBAAd,UACE,cAACgL,EAAA,EAAD,CACEvM,MAAM,OACNqH,GAAG,mBACHqH,MAAM,GACNvK,KAAK,SAJP,SAME,mBAAG5C,UAAU,4BAEf,cAACoN,GAAA,EAAD,CACEC,MAAO,EACP/I,OAAO,mBACPgJ,UAAU,QAHZ,6BASJ,+BACE,6BACE,cAACP,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,GAAA,EAAD,CAAOD,OAAK,EAAZ,UACE,cAACtK,EAAA,EAAD,CAAOwK,aAAa,GAAGtK,KAAK,aAC5B,sBAAM5C,UAAU,kBAAhB,SACE,sBAAMA,UAAU,mBAKxB,+BACE,mBAAGA,UAAU,QAAb,sCACA,mBAAGA,UAAU,aAAb,mDAIF,qBAAIA,UAAU,wBAAd,UACE,cAACgL,EAAA,EAAD,CACEvM,MAAM,OACNqH,GAAG,mBACHqH,MAAM,GACNvK,KAAK,SAJP,SAME,mBAAG5C,UAAU,4BAEf,cAACoN,GAAA,EAAD,CACEC,MAAO,EACP/I,OAAO,mBACPgJ,UAAU,QAHZ,2CAehB,cAAClG,EAAA,EAAD,CAAKC,GAAG,IAAIuF,GAAG,KAAf,SACE,eAACtF,EAAA,EAAD,WACE,cAAC0E,GAAA,EAAD,UACE,cAACE,GAAA,EAAD,CAAWpK,IAAI,KAAf,4BAEF,cAACyF,EAAA,EAAD,UACE,eAACuF,GAAA,EAAD,CAAO9M,UAAU,cAAcwN,YAAU,EAAzC,UACE,uBAAOxN,UAAU,eAAjB,SACE,+BACE,sCACA,yCACA,sCACA,oBAAIA,UAAU,cAAd,yBAGJ,kCACE,+BACE,6CACA,6CACA,2CACA,oBAAIA,UAAU,cAAd,wBAEF,+BACE,mDACA,iDACA,6CACA,oBAAIA,UAAU,cAAd,wBAEF,+BACE,2CACA,kDACA,yCACA,oBAAIA,UAAU,cAAd,wBAEF,+BACE,+CACA,8CACA,+CACA,oBAAIA,UAAU,cAAd,wBAEF,+BACE,mDACA,uCACA,yCACA,oBAAIA,UAAU,cAAd,wBAEF,+BACE,mDACA,2CACA,iEACA,oBAAIA,UAAU,cAAd,wBAEF,+BACE,6CACA,4CACA,2CACA,oBAAIA,UAAU,cAAd,8C,8BC5cPyN,OAzDf,WAIA,SAASC,KAIP,OACE,mCACE,sBAAK1N,UAAU,QAAf,UACM,qBAAKA,UAAU,QAAf,oBACI,8BACI,qBAAIA,UAAU,SAAd,UACI,qBAAIA,UAAU,eAAd,wBAEI,mBAAG4K,MAAM,oBAAoBpK,QAASkN,IACtC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,IACzC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,IACzC,mBAAG9C,MAAM,sBAAsBpK,QAASkN,IACxC,mBAAG9C,MAAM,qBAAqBpK,QAASkN,IACvC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,OAE7C,qBAAI1N,UAAU,eAAd,wBAEI,mBAAG4K,MAAM,oBAAoBpK,QAASkN,IACtC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,IACzC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,IACzC,mBAAG9C,MAAM,sBAAsBpK,QAASkN,IACxC,mBAAG9C,MAAM,qBAAqBpK,QAASkN,IACvC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,OAE7C,qBAAI1N,UAAU,eAAd,8BAEI,mBAAG4K,MAAM,oBAAoBpK,QAASkN,IACtC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,IACzC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,IACzC,mBAAG9C,MAAM,sBAAsBpK,QAASkN,IACxC,mBAAG9C,MAAM,qBAAqBpK,QAASkN,IACvC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,OAE7C,qBAAI1N,UAAU,eAAd,8BAEI,mBAAG4K,MAAM,oBAAoBpK,QAASkN,IACtC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,IACzC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,IACzC,mBAAG9C,MAAM,sBAAsBpK,QAASkN,IACxC,mBAAG9C,MAAM,qBAAqBpK,QAASkN,IACvC,mBAAG9C,MAAM,uBAAuBpK,QAASkN,kBC9BjEC,GAAW,CACb,CAAE,MAAS,YAAa,UAAa,oBAAqB,WAAc,gCAAiC,SAAY,oBAAqB,UAAa,oBACvJ,CAAE,MAAS,WAAY,UAAa,mBAAoB,WAAc,+BAAgC,SAAY,mBAAoB,UAAa,mBACnJ,CAAE,MAAS,WAAY,UAAa,mBAAoB,WAAc,+BAAgC,SAAY,mBAAoB,UAAa,0BACnJ,CAAE,MAAS,OAAQ,UAAa,eAAgB,WAAc,2BAA4B,SAAY,eAAgB,UAAa,eACnI,CAAE,MAAS,YAAa,UAAa,oBAAqB,WAAc,gCAAiC,SAAY,oBAAqB,UAAa,2BACvJ,CAAE,MAAS,UAAW,UAAa,kBAAmB,WAAc,8BAA+B,SAAY,kBAAmB,UAAa,yBAC/I,CAAE,MAAS,QAAS,UAAa,gBAAiB,WAAc,4BAA6B,SAAY,gBAAiB,UAAa,gBACvI,CAAE,MAAS,QAAS,UAAa,gBAAiB,WAAc,4BAA6B,SAAY,gBAAiB,UAAa,iBCX1HC,ICiBX1K,GC2CWa,GAnDF,CACX,CACEqB,KAAM,aACNO,KAAM,YACND,QAAS,sEACTD,KAAM,wBACNoI,UAAWtH,EACXhB,OAAQ,UAEV,CACEH,KAAM,UACNO,KAAM,SACND,QAAS,sEACTD,KAAM,4BACNoI,UAAWC,GACXvI,OAAQ,UAEV,CACEH,KAAM,aACNO,KAAM,YACND,QAAS,6CACTD,KAAM,8BACNoI,UAAWE,GACXxI,OAAQ,UAEV,CACEH,KAAM,gBACNO,KAAM,UACND,QAAS,2GACTD,KAAM,2BACNoI,UCpBJ,WACE,OACE,mCACE,qBAAK7N,UAAU,UAAf,SACE,eAAC6G,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,CAAKwF,GAAG,IAAR,SACE,eAACtF,EAAA,EAAD,WACE,cAAC0E,GAAA,EAAD,UACE,oBAAIhM,UAAU,QAAd,4BAEF,cAACuH,EAAA,EAAD,UACE,eAACyG,GAAA,EAAD,WACE,eAACnH,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,CAAKpH,UAAU,UAAU4M,GAAG,IAA5B,SACE,eAACG,GAAA,EAAD,WACE,uDACA,cAACrK,EAAA,EAAD,CACEwK,aAAa,qBACbe,UAAQ,EACRtL,YAAY,UACZC,KAAK,cAIX,cAACwE,EAAA,EAAD,CAAKpH,UAAU,UAAU4M,GAAG,IAA5B,SACE,eAACG,GAAA,EAAD,WACE,6CACA,cAACrK,EAAA,EAAD,CACEwK,aAAa,YACbvK,YAAY,WACZC,KAAK,cAIX,cAACwE,EAAA,EAAD,CAAKpH,UAAU,UAAU4M,GAAG,IAA5B,SACE,eAACG,GAAA,EAAD,WACE,uBAAOmB,QAAQ,qBAAf,2BAGA,cAACxL,EAAA,EAAD,CAAOC,YAAY,iBAAiBC,KAAK,kBAI/C,eAACiE,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,CAAKpH,UAAU,UAAU4M,GAAG,IAA5B,SACE,eAACG,GAAA,EAAD,WACE,+CACA,cAACrK,EAAA,EAAD,CACEwK,aAAa,OACbvK,YAAY,UACZC,KAAK,cAIX,cAACwE,EAAA,EAAD,CAAKpH,UAAU,UAAU4M,GAAG,IAA5B,SACE,eAACG,GAAA,EAAD,WACE,8CACA,cAACrK,EAAA,EAAD,CACEwK,aAAa,SACbvK,YAAY,YACZC,KAAK,iBAKb,cAACiE,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,CAAKwF,GAAG,KAAR,SACE,eAACG,GAAA,EAAD,WACE,4CACA,cAACrK,EAAA,EAAD,CACEwK,aAAa,mDACbvK,YAAY,eACZC,KAAK,gBAKb,eAACiE,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,CAAKpH,UAAU,UAAU4M,GAAG,IAA5B,SACE,eAACG,GAAA,EAAD,WACE,yCACA,cAACrK,EAAA,EAAD,CACEwK,aAAa,OACbvK,YAAY,OACZC,KAAK,cAIX,cAACwE,EAAA,EAAD,CAAKpH,UAAU,UAAU4M,GAAG,IAA5B,SACE,eAACG,GAAA,EAAD,WACE,4CACA,cAACrK,EAAA,EAAD,CACEwK,aAAa,SACbvK,YAAY,UACZC,KAAK,cAIX,cAACwE,EAAA,EAAD,CAAKpH,UAAU,UAAU4M,GAAG,IAA5B,SACE,eAACG,GAAA,EAAD,WACE,gDACA,cAACrK,EAAA,EAAD,CAAOC,YAAY,WAAWC,KAAK,mBAIzC,cAACiE,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,CAAKwF,GAAG,IAAR,SACE,eAACG,GAAA,EAAD,WACE,6CACA,cAACrK,EAAA,EAAD,CACEyL,KAAK,KACLjB,aAAa,4EAEbvK,YAAY,+BACZyL,KAAK,IACLxL,KAAK,yBAOjB,cAACyL,GAAA,EAAD,UACE,cAACrD,EAAA,EAAD,CAAQhL,UAAU,WAAWvB,MAAM,UAAUmE,KAAK,SAAlD,yBAMN,cAACwE,EAAA,EAAD,CAAKwF,GAAG,IAAR,SACE,eAACtF,EAAA,EAAD,CAAMtH,UAAU,YAAhB,UACE,eAACuH,EAAA,EAAD,WACE,cAAC+G,GAAA,EAAD,IACA,sBAAKtO,UAAU,SAAf,UACE,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,qBACf,oBAAGhC,KAAK,SAASwC,QAAUnB,GAAMA,EAAEsB,iBAAnC,UACE,qBACE8D,IAAI,MACJzE,UAAU,SACVuE,IAAKgK,EAAQ,KAAyBC,UAExC,oBAAIxO,UAAU,QAAd,4BAEF,mBAAGA,UAAU,cAAb,+BAEF,qBAAKA,UAAU,mBAAf,mMAMF,cAACqO,GAAA,EAAD,UACE,sBAAKrO,UAAU,mBAAf,UACE,cAACgL,EAAA,EAAD,CAAQhL,UAAU,qBAAqBvB,MAAM,WAA7C,SACE,mBAAGuB,UAAU,sBAEf,cAACgL,EAAA,EAAD,CAAQhL,UAAU,qBAAqBvB,MAAM,UAA7C,SACE,mBAAGuB,UAAU,qBAEf,cAACgL,EAAA,EAAD,CAAQhL,UAAU,qBAAqBvB,MAAM,SAA7C,SACE,mBAAGuB,UAAU,2CD9I7BuF,OAAQ,UAEV,CACEH,KAAM,kBACNO,KAAM,iBACND,QAAS,2GACTD,KAAM,wBACNoI,UHjCJ,WAAmB,MAAD,EAEUzP,oBAAS,GAFnB,mBAEX2C,EAFW,KAEH0N,EAFG,KAsBhB,OATFzP,qBAAU,KAAM,4CACf,sBAAA7B,EAAA,sDACOS,aAAae,QAAQ,UACzBb,OAAOC,SAASC,KAAO,YAF1B,4CADe,uBAAC,WAAD,wBAMfY,KACE,IAIC,qCACA,sBAAK4B,QArBYnB,IACQ,+BAAvBA,EAAEiF,OAAOtE,UACXyO,GAAW1N,GAGX0N,GAAU,IAgBiBzO,UAAWe,EAAS,eAAiB,UAAhE,UAEE,sBAAKf,UAAU,eAAf,UAxCK,qBAyCG,mBAAG4K,MAAM,kCAEjB,8BACE,eAAC/D,EAAA,EAAD,WACG8G,GAAS5I,KAAIyC,GACZ,cAACJ,EAAA,EAAD,CAAKC,GAAG,IAAR,SAEE,cAACC,EAAA,EAAD,CAAMtH,UAAU,YAAhB,SACE,cAACuH,EAAA,EAAD,UACE,gCAEA,eAACtG,EAAA,EAAD,WACA,cAACS,EAAA,EAAD,CACEC,OAAK,EACL3B,UAAU,eACVvB,MAAM,OACNmE,KAAK,SAJP,SAMA,mBAAGgI,MAAM,wBAET,cAAChJ,EAAA,EAAD,CAAc5B,UAAU,sBAAxB,SACE,cAACgC,EAAA,EAAD,CACEhE,KAAK,SACLwC,QAAUnB,GAAMA,EAAEsB,iBAFpB,yBAQA,sBAAKX,UAAY,SAAjB,cAA2B,mBAAGA,UAAWwH,EAAKkH,eAC9C,sBAAK1O,UAAY,qBAAjB,cAAwCwH,EAAKE,YAC7C,sBAAK1H,UAAY,cAAjB,cAAiCwH,EAAKG,UAAtC,kBAMV,cAACP,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,mBAAGvB,GAAG,MAAM9H,KAAK,OAAjB,SACE,cAACsJ,EAAA,EAAD,CAAMtH,UAAU,wBAAhB,SACI,cAACuH,EAAA,EAAD,UACE,qBAAKvH,UAAW,YAAhB,SACA,sBAAMA,UAAU,OAAhB,SACE,mBAAG4K,MAAM,oCAU3B,sBAAK5K,UAAU,UAAf,UAA0Be,EAAU,cAAC,GAAD,IAAa,KAAjD,YG/CAwE,OAAQ,UAEV,CACEH,KAAM,WACNO,KAAM,aACND,QAAS,2GACTD,KAAM,sBACNoI,UFjEJ,WACE,OACE,mCACE,qBAAK7N,UAAU,UAAf,wBE+DFuF,OAAQ,WEvEG,OAA0B,wCHuI1BoJ,OArGf,SAAezQ,GACb,MAAMH,EAAWqF,cACXwL,EAAezQ,IAAMmF,OAAO,MAFd,EAGsBnF,IAAMC,UACc,IAA5DiN,SAASwD,gBAAgB7O,UAAUyD,QAAQ,aAJzB,mBAGbnD,EAHa,KAGEwO,EAHF,KAMpB3Q,IAAMa,WAAU,KACd,GAAIuE,UAAUC,SAASC,QAAQ,QAAU,EAAG,CAC1C4H,SAASwD,gBAAgB7O,WAAa,wBACtCqL,SAASwD,gBAAgBE,UAAUC,OAAO,yBAC1C9L,GAAK,IAAIQ,IAAiBkL,EAAajL,QAAS,CAC9CC,iBAAiB,IAEnB,IAAIqL,EAAS5D,SAAS6D,iBAAiB,qBACvC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOlG,OAAQoG,IACjCjM,GAAK,IAAIQ,IAAiBuL,EAAOE,IAIrC,OAAO,WACD5L,UAAUC,SAASC,QAAQ,QAAU,IACvCP,GAAGY,UACHuH,SAASwD,gBAAgBE,UAAUK,IAAI,yBACvC/D,SAASwD,gBAAgBE,UAAUC,OAAO,6BAIhD7Q,IAAMa,WAAU,KACd,GAAIuE,UAAUC,SAASC,QAAQ,QAAU,EAAG,CAC1C,IAAIwL,EAAS5D,SAAS6D,iBAAiB,qBACvC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOlG,OAAQoG,IACjCjM,GAAK,IAAIQ,IAAiBuL,EAAOE,IAGrC9D,SAASwD,gBAAgBQ,UAAY,EACrChE,SAASiE,iBAAiBD,UAAY,EAClCT,EAAajL,UACfiL,EAAajL,QAAQ0L,UAAY,KAElC,CAACtR,IAEJ,MAAM0C,EAAgB,KACpB4K,SAASwD,gBAAgBE,UAAUvM,OAAO,YAC1CsM,GAAkBxO,IAiBdiP,EAAgBnK,IACpB,IAAK,IAAI+J,EAAI,EAAGA,EAAIpL,GAAOgF,OAAQoG,IACjC,IAAsE,IAAlEpR,EAASsH,SAAS5B,QAAQM,GAAOoL,GAAG5J,OAASxB,GAAOoL,GAAG/J,MACzD,OAAOrB,GAAOoL,GAAGxJ,KAGrB,MAAO,SAET,OACE,cAAC5C,EAAuB6B,SAAxB,UACG,EAAGnG,QAAOwE,kBACT,qBAAC,IAAMuM,SAAP,UACE,sBAAKxP,UAAU,UAAf,UACE,cAAC,EAAD,CACE+D,OAAQA,GACRE,KAAM,CACJI,WAAY,KACZK,KAAM,QACNF,OAAQP,IAEVxD,cAAeA,IAEjB,sBAAKT,UAAU,aAAa8E,IAAK8J,EAAc/J,KAAMpG,EAArD,UACE,cAAC,EAAD,CACEmC,UAAW2O,EAAaxR,EAASsH,UACjC5E,cAAeA,EACfH,cAAeA,IAEjB,cAAC,IAAD,WA3COyD,EA4CMA,GA3ChBA,EAAOgB,KAAI,CAACC,EAAMC,IACH,WAAhBD,EAAKO,OAEL,cAAC,IAAD,CACEH,KAAMJ,EAAKO,OAASP,EAAKI,KACzByI,UAAW7I,EAAK6I,WACX5I,GAIF,kBAXMlB,U,4BI3BN0L,OA7Bf,WAEE,OACE,qBAAKzP,UAAU,aAAf,SACE,sBAAKA,UAAU,kBAAf,UACA,qBAAKA,UAAU,eAAf,mBAGA,qBAAKA,UAAU,cAAf,qNACA,qBAAKA,UAAU,sBAAf,2BACA,qBAAKA,UAAU,cAAf,2NACA,qBAAKA,UAAU,sBAAf,qBACA,qBAAKA,UAAU,cAAf,8DACA,qBAAKA,UAAU,sBAAf,6BACA,qBAAKA,UAAU,cAAf,sDACA,cAAC,IAAD,CAASoC,GAAG,mBAAZ,SACE,cAAC4I,EAAA,EAAD,CACEhL,UAAU,eACV0P,OAAK,EACLjR,MAAM,UAHR,iC,6BCjCOkR,G,qFAAf,WAAsBC,EAAUC,EAAOC,GAAvC,iBAAA3S,EAAA,+EAE6BG,IAAKqS,OAAO,CAC/BC,WACAE,WACAC,WAAY,CACRF,WANd,uBAEcG,EAFd,EAEcA,KAOR5S,QAAQC,IAAI2S,GACZpS,aAAaqS,QAAQ,OAAQD,GAVnC,kBAWa,MAXb,yCAaM5S,QAAQC,IAAI,oBAAZ,MAbN,kBAca,KAAM6S,SAdnB,2D,+BA2BeC,G,mFAAf,WAAsBP,EAAUE,GAAhC,eAAA3S,EAAA,+EAE2BG,IAAK6S,OAAOP,EAAUE,GAFjD,cAEcE,EAFd,OAGQ5S,QAAQC,IAAI2S,GACZpS,aAAaqS,QAAQ,OAAQD,GAJrC,kBAKe,MALf,uCAOM1S,IAAKiC,MAAL,KACEnC,QAAQC,IAAI,mBAAoB,KAAM6S,SAR9C,kBASe,KAAMA,SATrB,0D,sBAmEeE,OAtDf,WAAkB,MAAD,EACWhS,mBAAS,IADpB,mBACRyR,EADQ,KACDQ,EADC,OAEiBjS,mBAAS,IAF1B,mBAER0R,EAFQ,KAEEQ,EAFF,OAGelS,oBAAS,GAHxB,mBAGRmS,EAHQ,KAGCC,EAHD,OAIWpS,mBAAS,MAJpB,mBAIRmB,EAJQ,KAIDkR,EAJC,KAMf,OACE,qBAAKzQ,UAAU,QAAf,SACE,eAACsH,EAAA,EAAD,CAAMnG,MAAO,CAACsK,MAAO,SAArB,UACI,cAACiF,GAAA,EAAD,CAASC,KAAG,EAACpM,IAAKgK,EAAQ,KAAyBC,QAAS/J,IAAI,eAChE,eAAC8C,EAAA,EAAD,WACI,cAAC2E,GAAA,EAAD,CAAWlM,UAAU,UAArB,8BACCT,GAAS,cAACqR,GAAA,EAAD,CAAOnS,MAAM,SAAb,SAAuBc,IACjC,eAACyO,GAAA,EAAD,CAAMlI,GAAG,eAAgB+K,SAAQ,uCAAE,WAAOxR,GAAP,eAAAlC,EAAA,yDACjCkC,EAAEsB,iBACEmQ,GAAa,GACbP,EAH6B,gCAIZJ,GAAON,EAAOC,GAJF,OAI/BgB,EAJ+B,+CAMZnB,GAAOE,EAAOA,EAAOC,GANT,QAM/BgB,EAN+B,eAQjCL,EAASK,GAEJA,IACHhT,OAAOC,SAASC,KAAO,sBAXQ,4CAAF,sDAAjC,UAcA,cAAC+O,GAAA,EAAD,UACI,cAACrK,EAAA,EAAD,CACEC,YAAY,QACZC,KAAK,OACLrB,MAAOsO,EACPtE,SAAUlM,GAAKgR,EAAShR,EAAEiF,OAAO/C,WAGrC,cAACwL,GAAA,EAAD,UACE,cAACrK,EAAA,EAAD,CACEC,YAAY,WACZC,KAAK,WACLrB,MAAOuO,EACPvE,SAAUlM,GAAKiR,EAAYjR,EAAEiF,OAAO/C,cAI1C,cAACyJ,EAAA,EAAD,CAAQvM,MAAM,UAAUiR,OAAK,EAAC9M,KAAK,SAASmO,KAAK,eAAjD,SAAkER,EAAU,SAAW,YACvF,uBACA,mBAAGb,OAAK,EAAC1R,KAAK,qBAAqBwC,QAAS,KAAOgQ,GAAYD,IAA/D,SAA2EA,EAAU,iCAAmC,6CC1F/H,MAAMS,GACL,GADKA,GAEJ,gBAGIC,GAAejO,wBAAc,CACxCkO,MAAOF,GACPG,YAAa,SCNA,SAASC,GAAoBlT,GAAQ,MAAD,EACvBE,mBAAS4S,IADc,mBAC1CE,EAD0C,KACnCG,EADmC,KAmBjD,OAZArS,qBAAU,KACR,OAAQkS,GACN,KAAKF,GACH3F,SAASiG,KAAKvC,UAAUK,IAAI,iBAC5B,MACF,KAAK4B,GACL,QACE3F,SAASiG,KAAKvC,UAAUC,OAAO,oBAGlC,CAACkC,IAGF,cAACD,GAAaM,SAAd,CAAuBhQ,MAAO,CAAE2P,MAAOA,EAAOC,YAjBhD,SAAqBD,GACnBG,EAASH,KAgBT,SACGhT,EAAMsT,WClBE,SAASC,GAAuBvT,GAAQ,MAAD,EAC1BE,mBAAS0E,GADiB,mBAC7CrE,EAD6C,KACtCiT,EADsC,KAOpD,OACE,cAAC3O,EAAuBwO,SAAxB,CACEhQ,MAAO,CAAE9C,MAAOA,EAAOwE,YAN3B,SAAqBxE,GACnBiT,EAASjT,KAIT,SAGGP,EAAMsT,W,MCoBbG,QAAQC,UAAU,CACdtU,KAAM,CAGFuU,OAAQ,YAGRC,WAAY,sBAGZC,oBAAqB,6BAGrBC,iBAAiB,EAIjBC,cAAe,CAEXC,OAAQpU,OAAOC,SAASoU,KAExB/M,KAAM,IAENgN,QAAS,IAKTC,QAAQ,GAIZC,uBAAwB,wBAQVhV,IAAKsU,YAE3BW,IAASC,OACP,cAACpB,GAAD,UACE,cAACK,GAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUgB,OAAK,EAACC,KAAK,IAAItQ,GAAG,aAC5B,cAAC,IAAD,CAAOgD,KAAK,WAAWyI,UAAW4B,KAClC,cAAC,IAAD,CAAOrK,KAAK,SAASyI,UAAWuC,KAChC,cAAC,IAAD,CAAOhL,KAAK,IAAIoN,OAAStU,GAAU,cAAC,GAAD,eAAiBA,eAK5DmN,SAASC,eAAe,U,iBCtE1B,IAAIqH,EAAmB,CACrBC,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRrH,gBAAiB,UACjBsH,eAAgB,OAChBC,cAAe,OACfC,YAAa,EACbC,SAAU,GACVC,KAAM,UACNC,UAAW,EACXvI,SAAU,WAEZ0C,YAAY,EACZ8F,OAAQ,CACNC,MAAO,CACL,CACEC,cAAe,IACfC,UAAW,CACTC,YAAY,EACZjV,MAAO,uBACPkV,cAAe,eAEjBC,MAAO,CACLC,aAAc,GACdC,aAAc,IACdC,QAAS,GACTC,UAAW,aAIjBC,MAAO,CACL,CACET,cAAe,IACfC,UAAW,CACTC,YAAY,EACZjV,MAAO,uBACPkV,cAAe,eAEjBC,MAAO,CACLG,QAAS,GACTC,UAAW,eAUjBzH,EAAgB,CAClB2H,MAAQC,IACN,IAEIC,EAFMD,EAAOE,WAAW,MAEHC,qBAAqB,EAAG,IAAK,EAAG,IAMzD,OAJAF,EAAeG,aAAa,EAAG,wBAC/BH,EAAeG,aAAa,GAAK,wBACjCH,EAAeG,aAAa,EAAG,sBAExB,CACLC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,SAAU,CACR,CACEC,MAAO,mBACPC,MAAM,EACNjJ,gBAAiB0I,EACjBQ,YAAa,UACbC,YAAa,EACbC,WAAY,GACZC,iBAAkB,EAClBC,qBAAsB,UACtBC,iBAAkB,sBAClBC,0BAA2B,UAC3BC,iBAAkB,GAClBC,iBAAkB,EAClBC,sBAAuB,GACvBC,YAAa,EACbzQ,KAAM,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,SAK7D0Q,MAAQpB,IACN,IAEIC,EAFMD,EAAOE,WAAW,MAEHC,qBAAqB,EAAG,IAAK,EAAG,IAMzD,OAJAF,EAAeG,aAAa,EAAG,wBAC/BH,EAAeG,aAAa,GAAK,wBACjCH,EAAeG,aAAa,EAAG,sBAExB,CACLC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,SAAU,CACR,CACEC,MAAO,mBACPC,MAAM,EACNjJ,gBAAiB0I,EACjBQ,YAAa,UACbC,YAAa,EACbC,WAAY,GACZC,iBAAkB,EAClBC,qBAAsB,UACtBC,iBAAkB,sBAClBC,0BAA2B,UAC3BC,iBAAkB,GAClBC,iBAAkB,EAClBC,sBAAuB,GACvBC,YAAa,EACbzQ,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,SAKhE2Q,MAAQrB,IACN,IAEIC,EAFMD,EAAOE,WAAW,MAEHC,qBAAqB,EAAG,IAAK,EAAG,IAMzD,OAJAF,EAAeG,aAAa,EAAG,wBAC/BH,EAAeG,aAAa,GAAK,wBACjCH,EAAeG,aAAa,EAAG,sBAExB,CACLC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,SAAU,CACR,CACEC,MAAO,mBACPC,MAAM,EACNjJ,gBAAiB0I,EACjBQ,YAAa,UACbC,YAAa,EACbC,WAAY,GACZC,iBAAkB,EAClBC,qBAAsB,UACtBC,iBAAkB,sBAClBC,0BAA2B,UAC3BC,iBAAkB,GAClBC,iBAAkB,EAClBC,sBAAuB,GACvBC,YAAa,EACbzQ,KAAM,CAAC,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,SAK/D2H,QAASmG,GAMPlG,EAAgB,CAClB5H,KAAOsP,IACL,IAEIC,EAFMD,EAAOE,WAAW,MAEHC,qBAAqB,EAAG,IAAK,EAAG,IAMzD,OAJAF,EAAeG,aAAa,EAAG,wBAC/BH,EAAeG,aAAa,GAAK,wBACjCH,EAAeG,aAAa,EAAG,sBAExB,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5CC,SAAU,CACR,CACEC,MAAO,OACPC,MAAM,EACNjJ,gBAAiB0I,EACjBQ,YAAa,UACbC,YAAa,EACbC,WAAY,GACZC,iBAAkB,EAClBC,qBAAsB,UACtBC,iBAAkB,sBAClBC,0BAA2B,UAC3BC,iBAAkB,GAClBC,iBAAkB,EAClBC,sBAAuB,GACvBC,YAAa,EACbzQ,KAAM,CAAC,GAAI,IAAK,GAAI,GAAI,IAAK,QAKrC2H,QAASmG,GA2KX8C,EAAOC,QAAU,CACfnJ,gBACAE,gBACAC,cAxKkB,CAClB7H,KAAOsP,IACL,IAEIC,EAFMD,EAAOE,WAAW,MAEHC,qBAAqB,EAAG,IAAK,EAAG,IAMzD,OAJAF,EAAeG,aAAa,EAAG,uBAC/BH,EAAeG,aAAa,GAAK,uBACjCH,EAAeG,aAAa,EAAG,sBAExB,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,KAAM,KAAM,MAC1CC,SAAU,CACR,CACEC,MAAO,YACPC,MAAM,EACNjJ,gBAAiB0I,EACjBuB,qBAAsBvB,EACtBQ,YAAa,UACbC,YAAa,EACbC,WAAY,GACZC,iBAAkB,EAClBlQ,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,QAKpC2H,QAAS,CACPoG,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRrH,gBAAiB,UACjBsH,eAAgB,OAChBC,cAAe,OACfC,YAAa,EACbC,SAAU,GACVC,KAAM,UACNC,UAAW,EACXvI,SAAU,WAEZ0C,YAAY,EACZ8F,OAAQ,CACNC,MAAO,CACL,CACEE,UAAW,CACTC,YAAY,EACZjV,MAAO,uBACPkV,cAAe,eAEjBC,MAAO,CACLC,aAAc,GACdC,aAAc,IACdC,QAAS,GACTC,UAAW,aAIjBC,MAAO,CACL,CACER,UAAW,CACTC,YAAY,EACZjV,MAAO,uBACPkV,cAAe,eAEjBC,MAAO,CACLG,QAAS,GACTC,UAAW,gBAqGrBrH,cA1FoB,CACpB9H,KAAOsP,IACL,IAEIC,EAFMD,EAAOE,WAAW,MAEHC,qBAAqB,EAAG,IAAK,EAAG,IAMzD,OAJAF,EAAeG,aAAa,EAAG,yBAC/BH,EAAeG,aAAa,GAAK,wBACjCH,EAAeG,aAAa,EAAG,sBAExB,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,OACrCC,SAAU,CACR,CACEC,MAAO,mBACPC,MAAM,EACNjJ,gBAAiB0I,EACjBQ,YAAa,UACbC,YAAa,EACbC,WAAY,GACZC,iBAAkB,EAClBC,qBAAsB,UACtBC,iBAAkB,sBAClBC,0BAA2B,UAC3BC,iBAAkB,GAClBC,iBAAkB,EAClBC,sBAAuB,GACvBC,YAAa,EACbzQ,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,QAK/B2H,QAAS,CACPoG,qBAAqB,EACrBC,OAAQ,CACNC,SAAS,GAGXC,SAAU,CACRrH,gBAAiB,UACjBsH,eAAgB,OAChBC,cAAe,OACfC,YAAa,EACbC,SAAU,GACVC,KAAM,UACNC,UAAW,EACXvI,SAAU,WAEZ0C,YAAY,EACZ8F,OAAQ,CACNC,MAAO,CACL,CACEC,cAAe,IACfC,UAAW,CACTC,YAAY,EACZjV,MAAO,uBACPkV,cAAe,eAEjBC,MAAO,CACLC,aAAc,GACdC,aAAc,IACdC,QAAS,GACTC,UAAW,aAKjBC,MAAO,CACL,CACET,cAAe,IACfC,UAAW,CACTC,YAAY,EACZjV,MAAO,sBACPkV,cAAe,eAEjBC,MAAO,CACLG,QAAS,GACTC,UAAW,mB","file":"static/js/main.f4b9b0bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/emilyz.105ff23d.jpg\";","export default __webpack_public_path__ + \"static/media/header.9ee5a121.jpg\";","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\nimport { clearDb, setupReplication, teardownReplication } from 'trace-search';\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  NavbarToggler,\n  ModalHeader,\n} from \"reactstrap\";\nimport ToggleButton from 'react-toggle-button';\nimport { Link } from \"react-router-dom\";\n\nimport { Auth } from 'aws-amplify';\n\nasync function signOut() {\n  console.log('before')\n  console.log(await Auth.currentAuthenticatedUser())\n  try {\n    const currentUser = Auth.userPool.getCurrentUser();\n    await currentUser.signOut();\n    console.log('after');\n    console.log(await Auth.currentAuthenticatedUser());\n    localStorage.removeItem('user');\n    window.location.href = '/#/login';\n    } catch (error) {\n      console.log('error signing out: ', error);\n      localStorage.removeItem('user');\n      window.location.href = '/#/login';\n    }\n}\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  const [isLoggedIn, setIsLoggedIn] = React.useState((localStorage.getItem('user')));\n  const [replicate, setReplicate] = React.useState(false);\n\n  // Setup replication\n  React.useEffect(() => {\n    async function handleReplication() {\n      if (replicate) {\n        try {\n          const obj = await setupReplication();\n          const replicator = obj.TODO_replication;\n\n          replicator.on('error', (e) => {\n            alert(`Replication error!\\n\\n${e}`);\n            console.error(e);\n            setReplicate(false);\n          });\n        } catch(e) {\n          alert(`Replication error!\\n\\n${e}`);\n          console.error(e);\n          setReplicate(false);\n          return;\n        }\n      } else {\n        try {\n          await teardownReplication();\n        } catch (e) {\n          console.error(e);\n          return;\n        }\n      }\n    }\n    handleReplication();\n  }, [replicate]);\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav>\n                <div style={{ textAlign: 'center' }}>\n                  Sync\n                <ToggleButton\n                    inactiveLabel={<span>Off</span>}\n                    activeLabel={<span>On</span>}\n                    value={replicate || false}\n                    onToggle={() => setReplicate(prev => !prev) }\n                  />\n                </div>\n              </UncontrolledDropdown>\n              <UncontrolledDropdown nav>\n                <DropdownToggle\n                  caret\n                  color=\"default\"\n                  nav\n                  onClick={async (e) => { e.preventDefault() }}\n                >\n                  <div className=\"photo\">\n                    <i className=\"tim-icons icon-single-02\" />\n                  </div>\n                  <b className=\"caret d-none d-lg-block d-xl-block\" />\n                  <p className=\"d-lg-none\"></p>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                  </NavLink>\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                  </NavLink>\n                  <DropdownItem tag=\"li\" className=\"\">\n\n                  </DropdownItem>\n                  <DropdownItem divider tag=\"li\" />\n                  <NavLink tag=\"li\">\n                    <DropdownItem className=\"nav-item\" onClick={async () => {\n                      try {\n                        await clearDb();\n                        window.location.reload();\n                      } catch (e) {\n                        console.error(e);\n                      }\n                    }}>Delete my data</DropdownItem>\n                  </NavLink>\n                  <DropdownItem divider tag=\"li\" />\n                  {!isLoggedIn &&\n                  <NavLink to=\"/login\" tag={Link}>\n                    <DropdownItem className=\"nav-item\">Log In</DropdownItem>\n                  </NavLink>}\n                  {isLoggedIn &&\n                  <NavLink onClick={() => {\n                    signOut();\n                    setIsLoggedIn(!isLoggedIn);\n                    }} tag=\"li\">)\n                    <DropdownItem className=\"nav-item\">Log Out</DropdownItem>\n                  </NavLink>}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <Modal\n        modalClassName=\"modal-search\"\n        isOpen={modalSearch}\n        toggle={toggleModalSearch}\n      >\n        <ModalHeader>\n          <Input placeholder=\"SEARCH\" type=\"text\" />\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            onClick={toggleModalSearch}\n          >\n            <i className=\"tim-icons icon-simple-remove\" />\n          </button>\n        </ModalHeader>\n      </Modal>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n","import { createContext } from \"react\";\n\nexport const backgroundColors = {\n  primary: \"primary\",\n  blue: \"blue\",\n  green: \"green\",\n};\n\nexport const BackgroundColorContext = createContext({\n  color: backgroundColors.blue,\n  changeColor: (color) => {},\n});\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  const linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  const { routes, rtlActive, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"blank\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"blank\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            {logoImg !== null || logoText !== null ? (\n              <div className=\"logo\">\n                {logoImg}\n                {logoText}\n              </div>\n            ) : null}\n            <Nav>\n              {routes.map((prop, key) => {\n                if (prop.redirect) return null;\n                return (\n                  <li\n                    className={\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              })}\n            </Nav>\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","// Made by Chris Cohen\n// <PrivacyBadge service=\"facebook\"/>\n\nimport axios from 'axios';\nimport { useState } from 'react';\n\nfunction PrivacyBadge(props) {\n  const [id, setID] = useState(\"\")\n\n  // GET https://tosdr.org/api/v1/service/<props.service> and parse ID from JSON\n  let url = \"https://tosdr.org/api/v1/service/\" + props.service\n  axios.get(url)\n    .then(data => setID(data.data.id))\n\n  // Display badge, around which is a link to the ToS;DR webpage for that service\n  //       badge    - https://tosdr.org/api/badge/en_<id>.svg\n  //       ToS page - https://tosdr.org/en/service/<id>\n\n  let service_url = \"https://tosdr.org/en/service/\" + id\n  let badge = \"https://tosdr.org/api/badge/en_\" + id + \".svg\"\n\n  return (\n      <a href={service_url} target=\"blank\" >\n        <img src={badge} alt=\"Privacy Badge\"/>\n      </a>\n  );\n}\n\nexport default PrivacyBadge;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardBody,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nimport { ThirdPartyAccount, accounts, AccountType } from 'trace-search';\nimport { useEffect } from \"react\";\nimport PrivacyBadge from \"../components/PrivacyBadge/PrivacyBadge\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard(props) {\n  const [plsRender, setPlsRender] = React.useState(false);\n  const [bigChartData, setbigChartData] = React.useState(\"data1\");\n  const setBgChartData = (name) => {\n    setbigChartData(name);\n  };\n\n  useEffect(() => {\n    async function loadAccounts() {\n      try {\n        // Load all accounts from the database into memory\n        await ThirdPartyAccount.loadAll();\n        setPlsRender(current => !current);\n      } catch (e) {\n        console.error('Failed to load accounts from the database!');\n        console.error(e);\n      }\n      console.log(accounts);\n    }\n\n    loadAccounts();\n  }, []);\n\n  return (\n    <>\n      <div className=\"content\">\n\n        <div className=\"header\">\n          <h3 className=\"header-title\">Claimed Accounts</h3>\n          {/* {Object.values(accounts).map(account => {\n            return <div key={account.id}>{account.site.name} - {account.userName}</div>\n          })} */}\n\n          <Link\n            className=\"btn btn-primary add-site-button\"\n            color=\"primary\"\n            to=\"/admin/search\"\n          >\n            Add New Site\n          </Link>\n        </div>\n\n        <hr></hr>\n\n        <Row>\n          {Object.values(accounts)\n            .filter(account => account.type === AccountType.CLAIMED)\n            .map(account => (\n            <Col lg=\"3\" key={account.id}>\n\n              <Card className=\"card-user\">\n                <CardBody>\n                  <div>\n                  <div className=\"dashboard-parent\">\n                    <div className=\"badge\" >\n                      <PrivacyBadge service={account.site.name}></PrivacyBadge>\n                    </div>\n                  <UncontrolledDropdown>\n                  <DropdownToggle\n                    caret\n                    className=\"btn-icon dot\"\n                    color=\"link\"\n                    type=\"button\"\n                  >\n                  <i className=\"fas fa-ellipsis-h\"></i>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-menu-right\">\n                    <DropdownItem\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      REMOVE\n                    </DropdownItem>\n                    <DropdownItem\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      EDIT\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                </div>\n                    <div className = \"editor\"> <i className={account.site.logoClass !== \"fa-question-circle\" ? \"fab \"+account.site.logoClass : \"fas \"+account.site.logoClass}></i></div>\n                    <div className = \"editor-handle-name\">@{account.userName}</div>\n                    <div className = \"editor-link\">\n                      <a href={account.url} target=\"blank\">{account.site.prettyUrl || account.site.urlMain || account.site.url}</a>\n                    </div>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          ))}\n\n          {/* <Col lg=\"3\">\n            <Card className=\"card-user add-to-edit\">\n                <CardBody>\n                  <div className= \"edit-text\">\n                  <span className=\"icon\">\n                    <i class=\"fas fa-plus\"></i>\n                  </span>\n                  </div>\n                </CardBody>\n              </Card>\n          </Col> */}\n        </Row>\n\n        {/* <Row>\n          <Col xs=\"12\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <h5 className=\"card-category\">Total Shipments</h5>\n                    <CardTitle tag=\"h2\">Performance</CardTitle>\n                  </Col>\n                  <Col sm=\"6\">\n                    <ButtonGroup\n                      className=\"btn-group-toggle float-right\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data1\",\n                        })}\n                        color=\"info\"\n                        id=\"0\"\n                        size=\"sm\"\n                        onClick={() => setBgChartData(\"data1\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Accounts\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"1\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data2\",\n                        })}\n                        onClick={() => setBgChartData(\"data2\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Purchases\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-gift-2\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"2\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data3\",\n                        })}\n                        onClick={() => setBgChartData(\"data3\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Sessions\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-tap-02\" />\n                        </span>\n                      </Button>\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample1[bigChartData]}\n                    options={chartExample1.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Total Shipments</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-bell-55 text-info\" /> 763,215\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Daily Sales</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-delivery-fast text-primary\" />{\" \"}\n                  3,500€\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Bar\n                    data={chartExample3.data}\n                    options={chartExample3.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Completed Tasks</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-send text-success\" /> 12,100K\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample4.data}\n                    options={chartExample4.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"6\" md=\"12\">\n            <Card className=\"card-tasks\">\n              <CardHeader>\n                <h6 className=\"title d-inline\">Tasks(5)</h6>\n                <p className=\"card-category d-inline\"> today</p>\n                <UncontrolledDropdown>\n                  <DropdownToggle\n                    caret\n                    className=\"btn-icon\"\n                    color=\"link\"\n                    data-toggle=\"dropdown\"\n                    type=\"button\"\n                  >\n                    <i className=\"tim-icons icon-settings-gear-63\" />\n                  </DropdownToggle>\n                  <DropdownMenu aria-labelledby=\"dropdownMenuLink\" right>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Action\n                    </DropdownItem>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Another action\n                    </DropdownItem>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Something else\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </CardHeader>\n              <CardBody>\n                <div className=\"table-full-width table-responsive\">\n                  <Table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Update the Documentation</p>\n                          <p className=\"text-muted\">\n                            Dwuamish Head, Seattle, WA 8:47 AM\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip636901683\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip636901683\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input\n                                defaultChecked\n                                defaultValue=\"\"\n                                type=\"checkbox\"\n                              />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">GDPR Compliance</p>\n                          <p className=\"text-muted\">\n                            The GDPR is a regulation that requires businesses to\n                            protect the personal data and privacy of Europe\n                            citizens for transactions that occur within EU\n                            member states.\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip457194718\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip457194718\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Solve the issues</p>\n                          <p className=\"text-muted\">\n                            Fifty percent of all respondents said they would be\n                            more likely to shop at a company\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip362404923\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip362404923\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Release v2.0.0</p>\n                          <p className=\"text-muted\">\n                            Ra Ave SW, Seattle, WA 98116, SUA 11:19 AM\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip818217463\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip818217463\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Export the processed files</p>\n                          <p className=\"text-muted\">\n                            The report also shows that consumers will not easily\n                            forgive a company once a breach exposing their\n                            personal data occurs.\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip831835125\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip831835125\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Arrival at export process</p>\n                          <p className=\"text-muted\">\n                            Capitol Hill, Seattle, WA 12:34 AM\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip217595172\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip217595172\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Simple Table</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Name</th>\n                      <th>Country</th>\n                      <th>City</th>\n                      <th className=\"text-center\">Salary</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>Dakota Rice</td>\n                      <td>Niger</td>\n                      <td>Oud-Turnhout</td>\n                      <td className=\"text-center\">$36,738</td>\n                    </tr>\n                    <tr>\n                      <td>Minerva Hooper</td>\n                      <td>Curaçao</td>\n                      <td>Sinaai-Waas</td>\n                      <td className=\"text-center\">$23,789</td>\n                    </tr>\n                    <tr>\n                      <td>Sage Rodriguez</td>\n                      <td>Netherlands</td>\n                      <td>Baileux</td>\n                      <td className=\"text-center\">$56,142</td>\n                    </tr>\n                    <tr>\n                      <td>Philip Chaney</td>\n                      <td>Korea, South</td>\n                      <td>Overland Park</td>\n                      <td className=\"text-center\">$38,735</td>\n                    </tr>\n                    <tr>\n                      <td>Doris Greene</td>\n                      <td>Malawi</td>\n                      <td>Feldkirchen in Kärnten</td>\n                      <td className=\"text-center\">$63,542</td>\n                    </tr>\n                    <tr>\n                      <td>Mason Porter</td>\n                      <td>Chile</td>\n                      <td>Gloucester</td>\n                      <td className=\"text-center\">$78,615</td>\n                    </tr>\n                    <tr>\n                      <td>Jon Porter</td>\n                      <td>Portugal</td>\n                      <td>Gloucester</td>\n                      <td className=\"text-center\">$98,615</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row> */}\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState } from 'react';\n\n// reactstrap components\nimport { Row, Col, Card, CardBody, Button } from \"reactstrap\";\n\nimport { SearchDefinition, AccountType, searchResults, allSites, tags, filterSitesByTags } from 'trace-search';\n\nconst testSiteNames = [\n  'GitHub',\n  'Reddit',\n  'Apple Discussions',\n  'Facebook',\n  'BitBucket',\n  'GitLab',\n  'npm',\n  'Wikipedia',\n  'TripAdvisor',\n  'HackerNews',\n  'Steam',\n  'Keybase',\n  'last.fm',\n  'Twitch'\n];\n\nfunction SearchComponent() {\n  const [isVisible, setVisible] = useState(false);\n  const [keywordsEntered, setKeywordsEntered] = useState(false);\n  const [tagsEntered, setTagsEntered] = useState(false);\n  const [userNames, setUserNames] = useState([]);\n  const [resultIds, setResultsIds] = useState([]);\n  const [progress, setProgress] = useState(-1);\n  const [categories, setCategories] = useState(tags.slice());\n\n  const handleRefineClick = () => {\n    setVisible(!isVisible);\n  }\n\n  const handleCancelClick = () => {\n    // refresh window\n    window.location.reload();\n  }\n\n  const selectAll = () => {\n    setCategories(tags.slice());\n    setTagsEntered(false);\n  }\n\n  const unselectAll = () => {\n    setCategories([]);\n\n  }\n\n  function keyPress(e) {\n    if (e.keyCode === 13) {\n      if (!userNames.includes(e.target.value) && e.target.value !== '') {\n        userNames.push(e.target.value);\n        setUserNames([...userNames]);\n        setKeywordsEntered(false);\n      }\n      document.getElementById('search-bar').value = '';\n    }\n    else if (e.keyCode === 8 && e.target.value === '') {\n      userNames.splice(userNames.length - 1, 1);\n      setUserNames([...userNames]);\n    }\n  }\n\n  async function submitSearch(e) {\n    if (userNames.length === 0) {\n      setKeywordsEntered(true);\n      console.log(\"no keywords entered\");\n    }\n    else if (categories.length === 0){\n      setTagsEntered(true);\n      console.log(\"no tags entered\");\n    }else {\n      console.log(\"Submit Searches\");\n\n      // Clear old results\n      setResultsIds([]);\n      setProgress(0);\n\n      // TODO: This should eventually move to SearchDefinition and\n      // shouldn't be this terribly confusing and inefficient\n      const testSites = testSiteNames.map(name => allSites[name]);\n      const taggedSites = filterSitesByTags(testSites, categories);\n      const taggedSiteNames = taggedSites.map(site => site.name);\n\n      const searchDef = new SearchDefinition(undefined, taggedSiteNames);\n      searchDef.userNames = userNames;\n      await searchDef.save();\n\n      const search = await searchDef.new();\n\n      search.events.on('result', (id) => {\n        setResultsIds(prev => prev.concat([id]));\n        setProgress(search.progress);\n      });\n\n      await search.start();\n    }\n  }\n\n  function deleteEntry(e) {\n    userNames.splice(userNames.indexOf(e), 1);\n    setUserNames([...userNames]);\n  }\n\n  function typing() {\n    setKeywordsEntered(false);\n  }\n\n  function handleClickCheckbox(e) {\n\n    if (categories.includes(e.target.value)) {\n      categories.splice(categories.indexOf(e.target.value), 1);\n      setCategories([...categories]);\n    }\n    else {\n      setTagsEntered(false);\n      categories.push(e.target.value);\n      setCategories([...categories]);\n    }\n  }\n\n  async function claimAccount(account) {\n    try {\n        await account.claim();\n        alert(\"Account successfully claimed!\");\n    } catch (e) {\n      alert('Account has already been claimed!');\n      console.error(e);\n    }\n  }\n\n  async function deleteAccount(account) {\n    try {\n        await account.reject();\n        alert(\"Account successfully removed!\");\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  // TODO: This should really move to a component\n  const discoveredHTML = [];\n  const unregisteredHTML = [];\n  for (const resultId of resultIds) {\n    const account = searchResults[resultId];\n    const isUnregistered = account.type === AccountType.UNREGISTERED;\n\n    const htmlForDisplay = (\n      <Col lg=\"3\" key={account.id}>\n        <Card className=\"card-user\">\n          <CardBody>\n            <div class=\"card-details\">\n              <div className=\"editor\"> <i className={account.site.logoClass !== \"fa-question-circle\" ? \"fab \"+account.site.logoClass : \"fas \"+account.site.logoClass}></i></div>\n              <div className=\"editor-handle-name\">\n                  @{account.userName}\n              </div>\n              <div className=\"editor-link\">\n                <a href={account.site.url.replace(\"{}\", account.userName)} target=\"blank\">\n                  {account.site.prettyUrl || account.site.urlMain || account.site.url}\n                </a>\n              </div>\n              {isUnregistered ? <div></div> :\n                <div className=\"test\" style={{ position: 'absolute', bottom: '20px', right: '20px' }}>\n                  {/* <button onClick={account.claim.bind(account)}>✔️</button> */}\n                  <Button onClick={() => claimAccount(account)} className=\"claim-button\">\n                    <i className=\"tim-icons icon-check-2\" />\n                  </Button>\n                  &nbsp;\n                  <Button onClick={() => deleteAccount(account)} className=\"claim-button\">\n                    <i className=\"tim-icons icon-simple-remove\" />\n                  </Button>\n                </div>\n              }\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n\n    if (isUnregistered) {\n      unregisteredHTML.push(htmlForDisplay);\n    } else {\n      discoveredHTML.push(htmlForDisplay);\n    }\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"search-title\">\n        TRACE\n      </div>\n      <div className=\"search-info\">Find your digital footprint. Manage your online presence. Our service allows you to increase your social media engagement while keeping your privacy a priority. Sync your information or work locally.</div>\n\n      <div className=\"one\">\n        <div className=\"three\">{userNames.map(item => <div className=\"entered\" key={item}>\n          <i className=\"icon fas fa-times\" onClick={() => deleteEntry(item)}></i>\n          {item}\n        </div>)}\n        </div>\n        <div className=\"two\">\n          <input\n            id=\"search-bar\"\n            className=\"two-search\"\n            placeholder=\"enter keyword\"\n            onKeyDown={keyPress}\n            onChange={typing}>\n          </input>\n        </div>\n        <div className=\"four\">\n          <i onClick={submitSearch} className=\"fas fa-search\"></i>\n        </div>\n      </div>\n\n      <div className=\"refine-search\"><span className=\"the-text refine\" onClick={handleRefineClick}>refine search</span></div>\n      <div className=\"refine-search\"><span className=\"the-text cancel\" onClick={handleCancelClick}>cancel</span></div>\n\n      <div className={isVisible ? \"dropdownVis\" : \"dropdownNotVis\"} >\n        <Row>\n          {tags.map(tag => (\n            <Col lg=\"3\" key={tag}>\n              <input\n                type=\"checkbox\"\n                value={tag}\n                onChange={handleClickCheckbox}\n                checked={categories.includes(tag)}\n              />\n              <span className=\"checkbox-name\">{tag}</span>\n            </Col>\n          ))}\n        </Row>\n        <Button className=\"categories-button\" onClick={selectAll}>Select All</Button>\n        <Button className=\"categories-button\" onClick={unselectAll}>Deselect All</Button>\n      </div>\n      <div className={keywordsEntered ? \"error-message-visible\" : (tagsEntered ? \"error-message-visible\" : \"error-not-visible\")}>\n        {keywordsEntered ? \"please enter at least one keyword\" : (tagsEntered ? \"please enter at least one tag\" : \"\")}\n      </div>\n\n      {progress >= 0 ?\n        <div style={{ width: '100%', textAlign: 'center' }}>\n          <div>{progress}%</div>\n          <div style={{ width: `${progress}%`, backgroundColor: '#5e72e4', borderRadius: 50 }}>&nbsp;</div>\n        </div>\n        :\n        <div></div>\n      }\n\n      <hr></hr>\n\n      <div>\n        {resultIds.length > 0 ? <div><h2>Discovered Accounts</h2></div> : <div></div>}\n        <Row>\n          {discoveredHTML}\n        </Row>\n      </div>\n\n      <div>\n        {resultIds.length > 0 ? <div><h2>Unregistered Accounts</h2></div> : <div></div>}\n        <Row>\n          {unregisteredHTML}\n        </Row>\n      </div>\n\n    </div >\n  );\n}\n\nexport default SearchComponent;\n\n// got visibility toggle from https://stackoverflow.com/questions/42630473/react-toggle-class-onclick\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Label,\n  FormGroup,\n  Input,\n  Table,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4,\n} from \"variables/charts.js\";\n\nfunction Dashboard(props) {\n  const [bigChartData, setbigChartData] = React.useState(\"data1\");\n  const setBgChartData = (name) => {\n    setbigChartData(name);\n  };\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col xs=\"12\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <h5 className=\"card-category\">Total Shipments</h5>\n                    <CardTitle tag=\"h2\">Welcome to the Analytics Page</CardTitle>\n                  </Col>\n                  <Col sm=\"6\">\n                    <ButtonGroup\n                      className=\"btn-group-toggle float-right\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data1\",\n                        })}\n                        color=\"info\"\n                        id=\"0\"\n                        size=\"sm\"\n                        onClick={() => setBgChartData(\"data1\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Accounts\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"1\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data2\",\n                        })}\n                        onClick={() => setBgChartData(\"data2\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Purchases\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-gift-2\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"2\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data3\",\n                        })}\n                        onClick={() => setBgChartData(\"data3\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Sessions\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-tap-02\" />\n                        </span>\n                      </Button>\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample1[bigChartData]}\n                    options={chartExample1.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Total Shipments</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-bell-55 text-info\" /> 763,215\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Daily Sales</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-delivery-fast text-primary\" />{\" \"}\n                  3,500€\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Bar\n                    data={chartExample3.data}\n                    options={chartExample3.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Completed Tasks</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-send text-success\" /> 12,100K\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample4.data}\n                    options={chartExample4.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"6\" md=\"12\">\n            <Card className=\"card-tasks\">\n              <CardHeader>\n                <h6 className=\"title d-inline\">Tasks(5)</h6>\n                <p className=\"card-category d-inline\"> today</p>\n                <UncontrolledDropdown>\n                  <DropdownToggle\n                    caret\n                    className=\"btn-icon\"\n                    color=\"link\"\n                    data-toggle=\"dropdown\"\n                    type=\"button\"\n                  >\n                    <i className=\"tim-icons icon-settings-gear-63\" />\n                  </DropdownToggle>\n                  <DropdownMenu aria-labelledby=\"dropdownMenuLink\" right>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Action\n                    </DropdownItem>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Another action\n                    </DropdownItem>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Something else\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </CardHeader>\n              <CardBody>\n                <div className=\"table-full-width table-responsive\">\n                  <Table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Update the Documentation</p>\n                          <p className=\"text-muted\">\n                            Wanna get a mansion, a jacuzzi\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip636901683\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip636901683\"\n                            placement=\"right\"\n                          >\n                            A theater to watch my movies\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input\n                                defaultChecked\n                                defaultValue=\"\"\n                                type=\"checkbox\"\n                              />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">GDPR Compliance</p>\n                          <p className=\"text-muted\">\n                            Don't be mad that your girl love me\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip457194718\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip457194718\"\n                            placement=\"right\"\n                          >\n                            Yes yes yes\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Solve the issues</p>\n                          <p className=\"text-muted\">\n                            Bacon is good for me she thinks she's the queen and we're the sorry people\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip362404923\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip362404923\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Release v2.0.0</p>\n                          <p className=\"text-muted\">\n                            Ra Ave SW, Seattle, WA 98116, SUA 11:19 AM\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip818217463\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip818217463\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Export the processed files</p>\n                          <p className=\"text-muted\">\n                            The report also shows that consumers will not easily\n                            forgive a company once a breach exposing their\n                            personal data occurs.\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip831835125\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip831835125\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <FormGroup check>\n                            <Label check>\n                              <Input defaultValue=\"\" type=\"checkbox\" />\n                              <span className=\"form-check-sign\">\n                                <span className=\"check\" />\n                              </span>\n                            </Label>\n                          </FormGroup>\n                        </td>\n                        <td>\n                          <p className=\"title\">Arival at export process</p>\n                          <p className=\"text-muted\">\n                            Capitol Hill, Seattle, WA 12:34 AM\n                          </p>\n                        </td>\n                        <td className=\"td-actions text-right\">\n                          <Button\n                            color=\"link\"\n                            id=\"tooltip217595172\"\n                            title=\"\"\n                            type=\"button\"\n                          >\n                            <i className=\"tim-icons icon-pencil\" />\n                          </Button>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip217595172\"\n                            placement=\"right\"\n                          >\n                            Edit Task\n                          </UncontrolledTooltip>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Simple Table</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Name</th>\n                      <th>Country</th>\n                      <th>City</th>\n                      <th className=\"text-center\">Salary</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>Beansn Rice</td>\n                      <td>AMERICAAAAA</td>\n                      <td>fuck yeah</td>\n                      <td className=\"text-center\">$36,738</td>\n                    </tr>\n                    <tr>\n                      <td>Minerva McGonagal</td>\n                      <td>Blue Curaçao</td>\n                      <td>Sinaai-Waas</td>\n                      <td className=\"text-center\">$23,789</td>\n                    </tr>\n                    <tr>\n                      <td>Sage Sage</td>\n                      <td>Netherlands, The</td>\n                      <td>Baileux</td>\n                      <td className=\"text-center\">$56,142</td>\n                    </tr>\n                    <tr>\n                      <td>Philip Chaney</td>\n                      <td>Korea, South</td>\n                      <td>Overland Park</td>\n                      <td className=\"text-center\">$38,735</td>\n                    </tr>\n                    <tr>\n                      <td>Charlene was here</td>\n                      <td>Hello</td>\n                      <td>Friends</td>\n                      <td className=\"text-center\">$63,542</td>\n                    </tr>\n                    <tr>\n                      <td>Malcolm McCormick</td>\n                      <td>Pittsburg</td>\n                      <td>Yo I just graduated high school</td>\n                      <td className=\"text-center\">$78,615</td>\n                    </tr>\n                    <tr>\n                      <td>Jon Swanson</td>\n                      <td>Son of ron</td>\n                      <td>and tammy</td>\n                      <td className=\"text-center\">$98,615</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","function Colors() {\n\n\n\nfunction handleClick() {\n    //do this when a color is clicked\n};\n\n  return (\n    <>\n      <div className=\"popup\">\n            <div className=\"title\">themes</div>\n                <div>\n                    <ul className=\"editor\">\n                        <li className=\"editor-popup\">\n                            name color:\n                            <i class=\"fas fa-circle red\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle orange\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle yellow\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle green\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle blue\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle purple\" onClick={handleClick}></i>\n                        </li>\n                        <li className=\"editor-popup\">\n                            box colors:\n                            <i class=\"fas fa-circle red\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle orange\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle yellow\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle green\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle blue\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle purple\" onClick={handleClick}></i>\n                        </li>\n                        <li className=\"editor-popup\">\n                            background color:\n                            <i class=\"fas fa-circle red\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle orange\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle yellow\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle green\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle blue\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle purple\" onClick={handleClick}></i>\n                        </li>\n                        <li className=\"editor-popup\">\n                            other styles etc:\n                            <i class=\"fas fa-circle red\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle orange\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle yellow\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle green\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle blue\" onClick={handleClick}></i>\n                            <i class=\"fas fa-circle purple\" onClick={handleClick}></i>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Colors;\n","import React, { useState, useEffect } from 'react';\nimport Colors from \"views/Colors.js\";\nimport { Auth } from 'aws-amplify';\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nvar name = 'Isabel Battaglioli'\n\nvar tempData = [\n  { 'title': 'Instagram', 'prettyUrl': 'www.instagram.com', 'profileUrl': 'www.instagram.com/userProfile', 'userName': '@INSTAGRAM HANDLE', 'iconClass': 'fab fa-instagram' },\n  { 'title': 'Snapchat', 'prettyUrl': 'www.snapchat.com', 'profileUrl': 'www.snapchat.com/userProfile', 'userName': '@SNAPCHAT HANDLE', 'iconClass': 'fab fa-snapchat' },\n  { 'title': 'Facebook', 'prettyUrl': 'www.facebook.com', 'profileUrl': 'www.facebook.com/userProfile', 'userName': '@FACEBOOK HANDLE', 'iconClass': 'fab fa-facebook-square' },\n  { 'title': 'Vine', 'prettyUrl': 'www.vine.com', 'profileUrl': 'www.vine.com/userProfile', 'userName': '@VINE HANDLE', 'iconClass': 'fab fa-vine' },\n  { 'title': 'Pinterest', 'prettyUrl': 'www.pinterest.com', 'profileUrl': 'www.pinterest.com/userProfile', 'userName': '@PINTEREST HANDLE', 'iconClass': 'fab fa-pinterest-square' },\n  { 'title': 'Twitter', 'prettyUrl': 'www.twitter.com', 'profileUrl': 'www.twitter.com/userProfile', 'userName': '@TWITTER HANDLE', 'iconClass': 'fab fa-twitter-square' },\n  { 'title': 'Skype', 'prettyUrl': 'www.skype.com', 'profileUrl': 'www.skype.com/userProfile', 'userName': '@SKYPE HANDLE', 'iconClass': 'fab fa-skype' },\n  { 'title': 'Apple', 'prettyUrl': 'www.apple.com', 'profileUrl': 'www.apple.com/userProfile', 'userName': '@APPLE HANDLE', 'iconClass': 'fab fa-apple' },\n];\n\nfunction Editor() {\n\nconst [isOpen, setIsOpen] = useState(false);\n\nconst togglePopup = (e) => {\n  if (e.target.className === \"tim-icons icon-pencil icon\"){\n    setIsOpen(!isOpen);\n  }\n  else {\n    setIsOpen(false);\n  }\n}\n\nuseEffect(() => {\n async function isLoggedIn () {\n  if (!(localStorage.getItem('user'))) {\n    window.location.href = '/#/login';\n  }\n }\n isLoggedIn();\n}, []);\n\n  return (\n\n    <>\n    <div onClick={togglePopup} className={isOpen ? \"content blur\" : \"content\"}>\n\n      <div className=\"editor-title\">\n        {name}<i class=\"tim-icons icon-pencil icon\"></i>\n      </div>\n      <div>\n        <Row>\n          {tempData.map(site => (\n            <Col lg=\"3\">\n\n              <Card className=\"card-user\">\n                <CardBody>\n                  <div>\n\n                  <UncontrolledDropdown>\n                  <DropdownToggle\n                    caret\n                    className=\"btn-icon dot\"\n                    color=\"link\"\n                    type=\"button\"\n                  >\n                  <i class=\"fas fa-ellipsis-h\"></i>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-menu-right\">\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      REMOVE\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                    <div className = \"editor\"> <i className={site.iconClass}></i></div>\n                    <div className = \"editor-handle-name\"> {site.userName}</div>\n                    <div className = \"editor-link\"> {site.prettyUrl} </div>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          ))}\n          <Col lg=\"3\">\n            <a id=\"new\" href=\"#new\">\n              <Card className=\"card-user add-to-edit\">\n                  <CardBody>\n                    <div className= \"edit-text\">\n                    <span className=\"icon\">\n                      <i class=\"fas fa-plus\"></i>\n                    </span>\n                    </div>\n                  </CardBody>\n                </Card>\n            </a>\n          </Col>\n        </Row>\n      </div>\n    </div>\n    <div className=\"content\">{isOpen ?  <Colors/>  : null}  </div>\n    </>\n  );\n}\n\nexport default Editor;\n","import React from \"react\";\n\n// reactstrap components\nimport { } from \"reactstrap\";\n\nfunction Contact() {\n  return (\n    <>\n      <div className=\"content\">\n        CONTACT\n      </div>\n    </>\n  );\n}\n\nexport default Contact;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n//import FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/fingerprint.svg\";\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Admin(props) {\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper\">\n            <Sidebar\n              routes={routes}\n              logo={{\n                outterLink: null,\n                text: \"Trace\",\n                imgSrc: logo,\n              }}\n              toggleSidebar={toggleSidebar}\n            />\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n              <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <Switch>\n                {getRoutes(routes)}\n                {/* <Redirect from=\"*\" to=\"/landing\" /> */}\n              </Switch>\n            </div>\n          </div>\n          {/* <FixedPlugin bgColor={color} handleBgClick={changeColor} /> */}\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.js\";\nimport Search from \"views/Search.js\";\nimport Analytics from \"views/Analytics.js\";\nimport UserProfile from \"views/UserProfile.js\";\nimport Editor from \"views/Editor.js\";\nimport Contact from \"views/Contact.js\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-laptop\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/search\",\n    name: \"Search\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-zoom-split\",\n    component: Search,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/analytics\",\n    name: \"Analytics\",\n    rtlName: \"إخطارات\",\n    icon: \"tim-icons icon-chart-bar-32\",\n    component: Analytics,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Profile\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-single-02\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/profile-editor\",\n    name: \"Profile Editor\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-pencil\",\n    component: Editor,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/contact\",\n    name: \"Contact Us\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-send\",\n    component: Contact,\n    layout: \"/admin\",\n  }\n\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction UserProfile() {\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"8\">\n            <Card>\n              <CardHeader>\n                <h5 className=\"title\">Edit Profile</h5>\n              </CardHeader>\n              <CardBody>\n                <Form>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"5\">\n                      <FormGroup>\n                        <label>Company (disabled)</label>\n                        <Input\n                          defaultValue=\"Creative Code Inc.\"\n                          disabled\n                          placeholder=\"Company\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"px-md-1\" md=\"3\">\n                      <FormGroup>\n                        <label>Username</label>\n                        <Input\n                          defaultValue=\"michael23\"\n                          placeholder=\"Username\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label htmlFor=\"exampleInputEmail1\">\n                          Email address\n                        </label>\n                        <Input placeholder=\"mike@email.com\" type=\"email\" />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label>First Name</label>\n                        <Input\n                          defaultValue=\"Mike\"\n                          placeholder=\"Company\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label>Last Name</label>\n                        <Input\n                          defaultValue=\"Andrew\"\n                          placeholder=\"Last Name\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <label>Address</label>\n                        <Input\n                          defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                          placeholder=\"Home Address\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>City</label>\n                        <Input\n                          defaultValue=\"Mike\"\n                          placeholder=\"City\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"px-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Country</label>\n                        <Input\n                          defaultValue=\"Andrew\"\n                          placeholder=\"Country\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Postal Code</label>\n                        <Input placeholder=\"ZIP Code\" type=\"number\" />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"8\">\n                      <FormGroup>\n                        <label>About Me</label>\n                        <Input\n                          cols=\"80\"\n                          defaultValue=\"Lamborghini Mercy, Your chick she so thirsty, I'm in\n                            that two seat Lambo.\"\n                          placeholder=\"Here can be your description\"\n                          rows=\"4\"\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </Form>\n              </CardBody>\n              <CardFooter>\n                <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                  Save\n                </Button>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card className=\"card-user\">\n              <CardBody>\n                <CardText />\n                <div className=\"author\">\n                  <div className=\"block block-one\" />\n                  <div className=\"block block-two\" />\n                  <div className=\"block block-three\" />\n                  <div className=\"block block-four\" />\n                  <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                    <img\n                      alt=\"...\"\n                      className=\"avatar\"\n                      src={require(\"assets/img/emilyz.jpg\").default}\n                    />\n                    <h5 className=\"title\">Mike Andrew</h5>\n                  </a>\n                  <p className=\"description\">Ceo/Co-Founder</p>\n                </div>\n                <div className=\"card-description\">\n                  Do not be scared of the truth because we need to restart the\n                  human foundation in truth And I love you like Kanye loves\n                  Kanye I love Rick Owens’ bed design but the back is...\n                </div>\n              </CardBody>\n              <CardFooter>\n                <div className=\"button-container\">\n                  <Button className=\"btn-icon btn-round\" color=\"facebook\">\n                    <i className=\"fab fa-facebook\" />\n                  </Button>\n                  <Button className=\"btn-icon btn-round\" color=\"twitter\">\n                    <i className=\"fab fa-twitter\" />\n                  </Button>\n                  <Button className=\"btn-icon btn-round\" color=\"google\">\n                    <i className=\"fab fa-google-plus\" />\n                  </Button>\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default UserProfile;\n","export default __webpack_public_path__ + \"static/media/fingerprint.97f3db6d.svg\";","import { Auth } from 'aws-amplify';\n\n\n// reactstrap components\nimport { Button } from 'reactstrap';\nimport { NavLink } from \"react-router-dom\";\n\nasync function signUp(email, username, password) {\n  try {\n      const { user } = await Auth.signUp({\n          username,\n          password,\n          attributes: {\n              email,          // optional\n              // other custom attributes\n          }\n      });\n      console.log(user);\n  } catch (error) {\n      console.log('error signing up:', error);\n  }\n}\n\nfunction Landing() {\n\n  return (\n    <div className=\"main-panel\">\n      <div className=\"content landing\">\n      <div className=\"search-title\">\n        TRACE\n      </div>\n      <div className=\"search-info\">Find your digital footprint. Manage your online presence. Our service allows you to increase your social media engagement while keeping your privacy a priority. Sync your information or work locally.</div>\n      <div className=\"search-info heading\">What We Offer</div>\n      <div className=\"search-info\">TRACE offers a privacy-focused approach to manage your online presence. Use the search page to add acounts to your collection, then use the analytics page to monitor data trends on your accounts' activity.</div>\n      <div className=\"search-info heading\">Privacy</div>\n      <div className=\"search-info\">We would never tell your secrets. We promise. ;)</div>\n      <div className=\"search-info heading\">Getting Started</div>\n      <div className=\"search-info\">Click the button below to get started...</div>\n      <NavLink to=\"/admin/dashboard\">\n        <Button\n          className=\"start-button\"\n          block\n          color=\"primary\"\n        >\n          Get Started\n        </Button>\n      </NavLink>\n    </div>\n  </div>\n  );\n}\n\nexport default Landing;\n","import React, { useState } from \"react\";\nimport { Auth } from 'aws-amplify';\n\n// reactstrap components\nimport { Alert, Card, CardImg, CardBody, CardTitle, Button, Form, FormGroup, Input } from 'reactstrap';\n\nasync function signUp(username, email, password) {\n  try {\n      const { user } = await Auth.signUp({\n          username,\n          password,\n          attributes: {\n              email,\n          }\n      });\n      console.log(user);\n      localStorage.setItem('user', user);\n      return null;\n  } catch (error) {\n      console.log('error signing up:', error);\n      return error.message;\n  }\n}\n\n// Use this to verify email eventually\nasync function confirmSignUp(username, code) {\n    try {\n      await Auth.confirmSignUp(username, code);\n    } catch (error) {\n        console.log('error confirming sign up', error);\n    }\n}\n\nasync function signIn(username, password) {\n    try {\n        const user = await Auth.signIn(username, password);\n        console.log(user)\n        localStorage.setItem('user', user);\n        return null;\n    } catch (error) {\n      Auth.error = error;\n        console.log('error signing in', error.message);\n        return error.message;\n    }\n}\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setisLogin] = useState(true);\n  const [error, setError] = useState(null);\n\n  return (\n    <div className=\"login\">\n      <Card style={{width: '30rem'}}>\n          <CardImg top src={require(\"assets/img/header.jpg\").default} alt=\"trace logo\"/>\n          <CardBody>\n              <CardTitle className='welcome'>Welcome to TRACE</CardTitle>\n              {error && <Alert color=\"danger\">{error}</Alert>}\n              <Form id='sign-up-form'  onSubmit={async (e) => {\n                e.preventDefault();\n                let localError = false;\n                if (isLogin) {\n                  localError = await signIn(email, password);\n                } else {\n                  localError = await signUp(email, email, password)\n                }\n                setError(localError);\n\n                if (!localError) {\n                  window.location.href = '/#/admin/dashboard';\n                }\n              }}>\n              <FormGroup>\n                  <Input\n                    placeholder=\"Email\"\n                    type=\"text\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Input\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                  />\n                </FormGroup>\n              </Form>\n              <Button color=\"primary\" block type=\"submit\" form='sign-up-form' >{isLogin ? \"Log In\" : \"Sign Up\"}</Button>\n              <br/>\n              <a block href=\"javascript:void(0)\" onClick={() => {setisLogin(!isLogin)}}>{isLogin ? \"Don't have an account? Sign Up\" : \"Already have an account? Log In\"}</a>\n\n          </CardBody>\n      </Card>\n  </div>\n  );\n}\n\nexport default Login;\n","import { createContext } from \"react\";\n\nexport const themes = {\n  dark: \"\",\n  light: \"white-content\",\n};\n\nexport const ThemeContext = createContext({\n  theme: themes.dark,\n  changeTheme: () => {},\n});\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nexport default function BackgroundColorWrapper(props) {\n  const [color, setColor] = useState(backgroundColors.blue);\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return (\n    <BackgroundColorContext.Provider\n      value={{ color: color, changeColor: changeColor }}\n    >\n      {props.children}\n    </BackgroundColorContext.Provider>\n  );\n}\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport Landing from \"views/Landing.js\";\nimport Login from \"views/Login.js\";\n\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\n\n\nimport Amplify, { Auth } from 'aws-amplify';\n\nAmplify.configure({\n    Auth: {\n\n        // REQUIRED - Amazon Cognito Region\n        region: 'us-east-2',\n\n        // OPTIONAL - Amazon Cognito User Pool ID\n        userPoolId: 'us-east-2_kS3Rl0H4z',\n\n        // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n        userPoolWebClientId: '24jufelj2nr0cbt52nv3l4vqep',\n\n        // OPTIONAL - Enforce user authentication prior to accessing AWS resources or not\n        mandatorySignIn: false,\n\n        // OPTIONAL - Configuration for cookie storage\n        // Note: if the secure flag is set to true, then the cookie transmission requires a secure protocol\n        cookieStorage: {\n        // REQUIRED - Cookie domain (only required if cookieStorage is provided)\n            domain: window.location.host,\n        // OPTIONAL - Cookie path\n            path: '/',\n        // OPTIONAL - Cookie expiration in days\n            expires: 365,\n        // OPTIONAL - See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\n            // sameSite: \"lax\",\n        // OPTIONAL - Cookie secure flag\n        // Either true or false, indicating if the cookie transmission requires a secure protocol (https).\n            secure: false\n        },\n\n        // OPTIONAL - Manually set the authentication flow type. Default is 'USER_SRP_AUTH'\n        authenticationFlowType: 'USER_PASSWORD_AUTH',\n\n        // OPTIONAL - Manually set key value pairs that can be passed to Cognito Lambda Triggers\n        // clientMetadata: { myCustomKey: 'myCustomValue' },\n    }\n});\n\n// You can get the current config object\nconst currentConfig = Auth.configure();\n\nReactDOM.render(\n  <ThemeContextWrapper>\n    <BackgroundColorWrapper>\n      <HashRouter>\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/landing\" />\n          <Route path=\"/landing\" component={Landing} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/\" render={(props) => <AdminLayout {...props} />} />\n        </Switch>\n      </HashRouter>\n    </BackgroundColorWrapper>\n  </ThemeContextWrapper>,\n  document.getElementById(\"root\")\n);\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// ##############################\n// // // Chart variables\n// #############################\n\n// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n  },\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample1 = {\n  data1: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n        },\n      ],\n    };\n  },\n  data2: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n        },\n      ],\n    };\n  },\n  data3: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample3 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [\n        {\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n    },\n  },\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n    },\n  },\n};\n\nmodule.exports = {\n  chartExample1, // in src/views/Dashboard.js\n  chartExample2, // in src/views/Dashboard.js\n  chartExample3, // in src/views/Dashboard.js\n  chartExample4, // in src/views/Dashboard.js\n};\n"],"sourceRoot":""}